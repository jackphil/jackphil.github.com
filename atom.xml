<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[藏宝图]]></title>
  <link href="http://blog.jackphil.com/atom.xml" rel="self"/>
  <link href="http://blog.jackphil.com/"/>
  <updated>2014-03-10T23:41:48+08:00</updated>
  <id>http://blog.jackphil.com/</id>
  <author>
    <name><![CDATA[Jack Phil]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[呼吸]]></title>
    <link href="http://blog.jackphil.com/blog/2014/03/10/breath/"/>
    <updated>2014-03-10T22:52:35+08:00</updated>
    <id>http://blog.jackphil.com/blog/2014/03/10/breath</id>
    <content type="html"><![CDATA[<div id="preamble">
<div class="sectionbody">
<div class="paragraph">
<p>同着你的呼吸<br>
爱是我们的飞机<br>
升高 升高<br>
一直到极度的窒息</p>
</div>
<div class="paragraph">
<p>连着你的心跳<br>
爱是我们的钟表<br>
扑通 扑通<br>
一直到末日的拂晓</p>
</div>
<div class="paragraph">
<p>和着你的脚步<br>
爱是我们的公路<br>
呼啸 呼啸<br>
一直到我们的坟墓</p>
</div>
</div>
</div>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[哎，请呼叫转移：voip入门]]></title>
    <link href="http://blog.jackphil.com/blog/2014/01/29/voip-how-to/"/>
    <updated>2014-01-29T10:59:49+08:00</updated>
    <id>http://blog.jackphil.com/blog/2014/01/29/voip-how-to</id>
    <content type="html"><![CDATA[<div id="preamble">
<div class="sectionbody">
<div class="paragraph">
<p>旧文整理，内容或有过时</p>
</div>
</div>
</div>
<div class="sect1">
<h2 id="sip">什么是sip</h2>
<div class="sectionbody">
<div class="paragraph">
<p>sip相当于程控交换机，一个sip服务商可以看作一家移动运营商，市场上有很多sip服务商，就好比我们有中移动、联通和电信等等。</p>
</div>
<div class="paragraph">
<p>sip地址形如email地址，如 <a href="mailto:foo@foobar.com">foo@foobar.com</a> ，相当于你的手机号码。</p>
</div>
</div>
</div>
<div class="sect1">
<h2 id="">呼叫流程</h2>
<div class="sectionbody">
<div class="paragraph">
<p>在了解呼叫流程时需要记住一点，A能呼叫B，并不意味着B也能呼叫A，原因很多，如一台nokia手机并不能直接呼叫sip地址(当然可以借助手机上的sip客户端实现)，或者sip服务商仅提供接听免费，但呼叫需要收费，而你帐户里又没钱</p>
</div>
<div class="paragraph">
<p>参考 <a href="http://www.lxvoip.com/viewthread.php?tid=18711">你用什么接听Google Voice？</a>，里面提到了很多呼叫流程</p>
</div>
<div class="sect2">
<h3 id="sip-2">sip客户端</h3>
<div class="paragraph">
<p>首先你需要一台手机，这里叫sip客户端，你必须使用在某个sip服务商处的注册信息登录，该sip登录地址也就相当于这台手机的手机号，然后就可以接收对该sip地址的呼叫了。许多voip提供商都有自己的客户端，如nonoh，gzimo5。也有通用的客户端，如eyebeam，x-lite，fring等等</p>
</div>
<div class="admonitionblock tip">
<table>
<tr>
<td class="icon">
<div class="title">Tip</div>
</td>
<td class="content">
gtalk2voip可以将你的gtalk变成sip客户端，你只需将 <a href="mailto:service@gtalk2voip.com">service@gtalk2voip.com</a> 添加为好友
</td>
</tr>
</table>
</div>
</div>
<div class="sect2">
<h3 id="voip-voip">voip到voip</h3>
<div class="paragraph">
<p>就象在手机中添加通讯录，你也可以在sip客户端里添加其它sip地址，如你可以在你的gtalk里添加 <a href="mailto:foo%gizmo5.com@gtalk2voip.com">foo%gizmo5.com@gtalk2voip.com</a> 。注意，这里有些特殊情况，因为gtalk本身并不支持sip用户，需通过gtalk2voip实现，所以我们需要额外的 @gtalk2voip.com 后缀，而真正的sip地址中的@使用百分号%代替了，也可以用<code>_at_</code>代替 @，然后你就可以和gizmo5用户foo通话了。</p>
</div>
</div>
<div class="sect2">
<h3 id="voip-pstn">voip到pstn</h3>
<div class="paragraph">
<p>pstn号码指你的真实座机或手机号码，大多数voip服务商都提供到pstn号的呼叫，不过都是要收费的</p>
</div>
</div>
<div class="sect2">
<h3 id="pstn-voip">pstn到voip</h3>
<div class="paragraph">
<p>有些sip服务商会提供一个pstn号，如ipkall，gizmo5等，有人呼叫这个pstn号，会被转移到指定的sip地址甚至im(一般通过gtalk2voip)</p>
</div>
</div>
</div>
</div>
<div class="sect1">
<h2 id="voip">常见voip服务商</h2>
<div class="sectionbody">
<div class="paragraph">
<p>参考 <a href="http://www.shtion.com/1484.html">国外免费VoIP服务汇总</a></p>
</div>
<div class="paragraph">
<div class="title">ipkall</div>
<p>ipkall提供一个真实的美国电话号码(pstn号)，并将对该好码的呼叫转移到你指定的sip地址，如果30天内该号码没被呼叫并接通，将被收回。</p>
</div>
<div class="admonitionblock note">
<table>
<tr>
<td class="icon">
<div class="title">Note</div>
</td>
<td class="content">
注册时SIP Phone number和SIP Proxy分别是sip地址中@的前后部分
</td>
</tr>
</table>
</div>
<div class="paragraph">
<div class="title">Goolge Voice</div>
<p>Google Voice提供一个pstn号(GV号)，用于管理你的所有pstn号码，GV号被叫时会接通你指定的pstn号，回拨时先呼叫绑定的pstn号，接通后再转接被叫号码。所以原则上它是pstn to pstn，但你可以绑定一个虚拟pstn号，并把它转发到其它sip</p>
</div>
<div class="paragraph">
<div class="title">iptel.org</div>
<p>开源的sip服务器软件，也提供免费sip服务，将ipkall转发到iptel，是一个不错的选择</p>
</div>
<div class="paragraph">
<div class="title">gtalk2voip</div>
<p>其实比名字厉害的多，它还支持yahoo通，msn等。如果是gtalk，你的sip地址就是gmail地址。如果是yahoo通，则是 <a href="mailto:username%example.com@yahoo.gtalk2voip.com">username%example.com@yahoo.gtalk2voip.com</a></p>
</div>
<div class="paragraph">
<div class="title">gizmo5</div>
<p>也提供pstn号，已被Google收购，暂停注册（2011-02-11）</p>
</div>
<div class="paragraph">
<div class="title">virtualphoneline</div>
<p>提供pstn，可以转发到多种服务，skype，gtalk，msn等等，免费体验30天</p>
</div>
</div>
</div>
<div class="sect1">
<h2 id="-2">应用实例</h2>
<div class="sectionbody">
<div class="sect2">
<h3 id="google-voice">注册Google Voice</h3>
<div class="paragraph">
<p>参见http://subacme.rerouted.org/2010/02/easily-activating-google-voice/[在美国以外验证 Google Voice 的简单方法]，这应该是最简单的方法了</p>
</div>
<div class="ulist">
<ul>
<li>
<p>需要美国ip访问 <a href="http://www.google.com/voice">google voice</a>，可以使用vpn或自由门</p>
</li>
<li>
<p>注册ipkall，并设置转发到gtalk2voip</p>
</li>
<li>
<p>使用ipkall号注册Google Voice，google会拨打这个号码验证</p>
</li>
<li>
<p>我们可以在gtalk里接听并验证</p>
</li>
</ul>
</div>
</div>
<div class="sect2">
<h3 id="gtalk-skype">从gtalk拨打skype</h3>
<div class="paragraph">
<p>参见 <a href="http://www.lxvoip.net/voip-beginner/gmail2skype.html">用Gmail直接与Skype 免费通话</a>，利用gizmo5提供的功能，将来电转发到skype</p>
</div>
<div class="ulist">
<ul>
<li>
<p>添加gizmo5 sip地址到gtalk2voip</p>
</li>
<li>
<p>去gizmo5帐号设置转发所有来电到skype</p>
</li>
</ul>
</div>
</div>
</div>
</div>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Emacs字体]]></title>
    <link href="http://blog.jackphil.com/blog/2014/01/26/emacszi-ti/"/>
    <updated>2014-01-26T19:57:59+08:00</updated>
    <id>http://blog.jackphil.com/blog/2014/01/26/emacszi-ti</id>
    <content type="html"><![CDATA[<div id="preamble">
<div class="sectionbody">
<div class="paragraph">
<p>emacs23开始支持xft字体系统，建议升级。</p>
</div>
<div class="paragraph">
<p>推荐使用等宽字体，我一般在windows上使用文泉驿等宽正黑，Linux上使用雅黑MONO（来自碧海潮声，有修改）</p>
</div>
<div class="paragraph">
<div class="title">查看Emacs可用字体</div>
<p> M-x set-default-font  ，然后按tab就可得到可用字体列表</p>
</div>
<div class="paragraph">
<div class="title">配置</div>
<p>以下内容可以加入到init.el：</p>
</div>
<div class="listingblock">
<div class="content">
<pre>;; 默认字体：等宽，中英文1:2
(set-default-font "雅黑MONO:size=18")</pre>
</div>
</div>
</div>
</div>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[雷蒙斯尼奇的不幸历险：孩子的话大人永远不听]]></title>
    <link href="http://blog.jackphil.com/blog/2012/10/04/lemony-snickets-a-series-of-unfortunate-events/"/>
    <updated>2012-10-04T00:25:00+08:00</updated>
    <id>http://blog.jackphil.com/blog/2012/10/04/lemony-snickets-a-series-of-unfortunate-events</id>
    <content type="html"><![CDATA[<p>看完片子，我有点疑惑，雷蒙·斯尼奇是谁？小说原名A Series of Unfortunate Events，作者是Lemony Snicket（笔名），电影名Lemony Snicket’s A Series of Unfortunate Events，翻译的人估计没看过电影更没看过原著，我也不知道他或她或它（如谷歌翻译）是英文理解有误还是中文表达能力短板，反正译名让我觉得主角是雷蒙斯尼奇，他将会经历一系列不幸事件，其实这个意义上的英文名应该是The unfortunate events of Lemony Snicket。台湾译名波特莱尔大遇险倒是一目了然，不会误解</p>

<!--more-->

<p>对了，作为故事的讲述者，雷蒙斯尼奇以面目不清的剪影出现，扮演者正是最近让人感概岁月是把杀猪刀的裘德洛，腐女们的震惊，可以写一篇甲申八年祭了</p>

<p><img src="https://lh3.googleusercontent.com/-ZFrWYOmTCnM/UIQKD6CvWdI/AAAAAAAAK50/2Ee5wFLq_rA/s800/001372af63d611e856623d.jpg" /></p>

<p>幸好2004年，他还是《人物》杂志评选的当世最性感男人</p>

<p>书中作者开篇就声明“如果你喜欢有大团圆结局的故事，你最好去看看其他书。在这本书里，不只没有快乐的结局，没有快乐的开端，连其间都很少有快乐的事情。”电影开头保留了这个警告，还耍了个小花招，电影开始是一段温馨低幼的动画，正当观众疑惑是否放错片的时候（我会告诉你我被骗了吗），雷蒙斯尼奇闯入镜头，再三警告观众不喜勿看，趁早反悔还来得及。作者在这里卖萌耍酷，看着名字中醒目的unfortunate进来的读者或观众，会因为没有happy ending而吓跑吗？</p>

<p>一场火灾三个孤儿，奥拉夫伯爵，一个从未见过的亲戚，成了他们的监护人。孩子们成了家中的佣人洒扫做饭。而奥拉夫的真正目的是得到孩子们继承的财产。</p>

<p>他算好时间，把车停在铁轨上，锁好门窗，自己下车去买吃的。千钧一发之际，孩子们成功拉下了扳道闸。随后赶来的律师充耳不闻孩子们谋杀的控诉。不过奥拉夫还是因为纵容孩子驾驶汽车，被剥夺了监护权</p>

<p>孩子们又被送到生物学家叔叔那里。家里养着很多珍禽异兽，叔叔对人的了解，及不上他对动物的了解。奥拉夫杀了来应征的助手，冒名顶替，叔叔心不在焉，醉心于蛇类研究，没听懂孩子们的警告，最终被杀。奥拉夫被孩子们戳穿遁去，因为他虽然可以玩弄人性，却不知道那条外表凶猛的巨蟒，原来是最温顺的动物。</p>

<p>于是，孩子们又一次成了孤儿，被送到约瑟芬姑妈家。约瑟芬姑妈是个语法爱好者，住在一所临湖的危房中，整天担心着天有不测风云。因为害怕火灾，家里没有暖气，拒绝热菜。菜市场遇到乔装成老船长的奥拉夫。一阵忽悠，姑妈爱上了有故事的老船长。等孩子们回家，姑妈已经遇害。孩子们分析了遗书中的语法错误，得知姑妈没死，就藏身在湖边的一个洞中。湖中有恐怖的食人水蛭，它们成群结队，过处尸骨无存。危难时刻，奥拉夫驾着铁皮船出现，姑妈答应奥拉夫，自己什么都不会说，奥拉夫答应放她一条生路，姑妈一边纠正奥拉夫的语法错误，一边想上船，惹毛了奥拉夫，葬身水蛭</p>

<p>新的情况出现，律师称如果孩子们死了，奥拉夫将什么都得不到。奥拉夫又生一计，准备来个假戏真做。奥拉夫有一个剧团，自己是个戏痴，排练时一人包办所有角色，手下的演员们只能当起了无聊的观众。他排了一出戏，与孩子们中最聪明的姐姐在戏中结婚，请来法官参与演出，来个弄假成真。奥拉夫又以孩子们中最小的绝世好baby性命相威胁，逼迫姐姐就范。姐姐无奈签下了婚约。奥拉夫拿到婚约，得意的对台下的衣冠楚楚的贵宾们说出真相，“谁叫你们当初对孩子的话充耳不闻呢”，律师等大人物们大惊失色，但又对一纸文书徒呼奈何。这时，最渊博的老二爬上了奥拉夫的禁地高塔，发现了一切的秘密：让姑妈老公一直迷惑不解的魔眼，就是一个凸透镜，也是孩子们家宅火灾的原因。老二用凸透镜烧掉了奥拉夫手中挥舞着的婚约，奥拉夫失去了法律的挡箭牌，落得个阶下囚的下场</p>

<p>孩子们在自家房子的废墟上，收到了一封迟来的信，是父母欧洲旅行时寄给他们的，告诉他们有亲人陪伴，人生无处不青山</p>

<p>据说蒂姆波顿曾有意执导这部戏，准备让老搭档强尼德普出演奥拉夫一角。蒂姆波顿营造哥特童话世界的能力毋庸置疑，但他任人唯亲的想法是一个巨大的错误。一千个读者有一千个哈姆雷特，但我心中的奥拉夫伯爵只有一个——金凯瑞。喜剧表演有两种，一种是冷面，如果演砸了，人们最多说一句“好冷”，一种是夸张，如果演过了，人们会觉得是个神经病。这个在youtube上向新蜘蛛侠女友艾玛斯通公开示爱，穿着女友大V泳衣在海滩招摇的人，也许真的是一个人戏不分的神经病。他的表演虽然夸张，就像路飞的拳头，飞出去后总能恢复原状；他的笑容虽然都是调动五官挤出来的，却比春晚上的笑声更真实；他的邪恶入木三分，却并不讨厌；他的语言平淡无奇，而戏剧化的念白有声有色。</p>

<p>从哈利波特到波特莱尔三姐弟，从蝙蝠侠到蜘蛛侠，孤儿是成长的永恒主题。孤儿的父母通常只在他们的想象中，拥有神奇的魔法，通常比现实中的麻瓜更完美，是他们正在成长发育人生中一碗人参，遇到麻烦喝上一口，立刻精神百倍，“强劲的想象产生事实”，一个个都成了廿一世纪最贵的人才。高僧说逢父母杀父母，叛逆的少年不是孤儿创造条件也要做“孤儿”，仿佛父母就是助推火箭，把孩子带到一定高度就是累赘，应该自动脱落，或者干脆“射后不理”，而孩子的成长轨迹则依然能够精确制导，却忽略了大部分的孩子只具备了惯性制导能力。又好比蒲公英，好风凭借力，有些落到水里，有些落到粪池，有些落到石缝，只有少数的幸运儿，落在了肥沃的土壤。有的长成李光头，有的长成宋钢。</p>

<p><img src="https://lh6.googleusercontent.com/-_d9lCQw-yTk/UITgN6RKkXI/AAAAAAAAK7g/WEsJ9keiZbQ/s800/p1561994008.jpg" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[HTC One X刷机记]]></title>
    <link href="http://blog.jackphil.com/blog/2012/10/03/htc-one-x/"/>
    <updated>2012-10-03T15:49:00+08:00</updated>
    <id>http://blog.jackphil.com/blog/2012/10/03/htc-one-x</id>
    <content type="html"><![CDATA[<p>同事见我的sweep2wake也想要，说他老婆的HTC电源键已经不灵光了，按好几次才能成功一次。于是上xda给他找了个<a href="http://forum.xda-developers.com/showthread.php?t=1643692">bricked kernel</a>，刚刷好一切正常，晚上来电说玩游戏过程中不知哪里碰了一下，现在不断重启，进不了桌面，已经1个多小时了，机器烫手。One X把苹果的缺点学了去，电池不可拆卸，他有点束手无策了，我遥控他进入fastboot，选择power down关机。</p>

<p>第二天问他，说已经拿去电子市场花了70元叫人刷机了。通讯录、短信、照片等等都没了。这帮奸商简直是屠夫医生，无论收钱和刷机，下刀真狠</p>

<p>看了一下，刷的是基于官方台湾版的一个rom，已经root，sweep2wake自然没了，他知道我上次只刷了内核，说这次刷个rom试试。于是帮他刷了个ARHD，faux123 repack内核，DisableSweep2Wake开启s2w功能。测试了一天，一切正常。</p>

<!--more-->

<h2 id="section">解锁</h2>

<p>HTC提供官方解锁服务，可以参考这个<a href="http://forum.xda-developers.com/showthread.php?t=1592355">帖子</a>。</p>

<p>官方解锁后hboot依然显示s-on，但第一行会显示Unlocked字样。有个缺点是recovery不能刷boot分区，下面刷内核或rom都要单独用命令行手动刷boot.img</p>

<h2 id="recovery">recovery</h2>

<p>进hboot的方法和我的saga一样，按住音量下键再按电源键直到显示三色屏</p>

<p>我选择了<a href="http://forum.xda-developers.com/showthread.php?t=1594819">Clockworkmod Touch Recovery 5.8.4.0</a>，现在Recovery都是触屏操作了</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">fastboot flash recovery cwm.img</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="rom">刷rom</h2>

<p>我刷的是<a href="http://forum.xda-developers.com/showthread.php?t=1562603">Android Revolution HD</a></p>

<p>先刷boot分区，boot.img有单独下载</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class=""><span class="line">fastboot flash boot boot.img
</span><span class="line">fastboot erase cache</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>接下来清理和准备分区，通过recovery刷Super Wipe包。</p>

<p>最后，通过recovery刷rom包，全程触屏操作，完成后重启</p>

<h2 id="section-1">刷内核</h2>

<p>按ARHD内核的说明，刷第三方内核或模块，需刷系统后至少进一次桌面</p>

<p>这次我选择的内核是<a href="http://forum.xda-developers.com/showthread.php?t=1647993">Faux123</a>，有专门针对ARHD的<a href="http://forum.xda-developers.com/showthread.php?t=1654982">repack版</a></p>

<p>kernel选择版本号带m的通用版，没有超频，更加稳定</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class=""><span class="line">fastboot flash boot faux_010m_arhd_9.0.0.img
</span><span class="line">fastboot erase cache</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>与kernel相应的modules通过recovery刷入</p>

<p>重启后进入系统，安装<a href="http://forum.xda-developers.com/showthread.php?t=1736258&amp;highlight=sweep2wake">DisableSweep2Wake</a>来打开sweep2wake功能</p>

<h2 id="root">root</h2>

<p>ARHD已经root，这个是之前单刷内核时做的功课</p>

<p>安装<a href="https://play.google.com/store/apps/details?id=com.joeykrim.rootcheckp">root checker pro</a>，检查系统是否已root</p>

<p>若没root，建议刷<a href="http://forum.xda-developers.com/showthread.php?t=1538053">SuperSU</a>（选择zip包），非常简单</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[我的Desire S，我的ICS]]></title>
    <link href="http://blog.jackphil.com/blog/2012/10/02/saga-upgrade-to-ics/"/>
    <updated>2012-10-02T16:11:00+08:00</updated>
    <id>http://blog.jackphil.com/blog/2012/10/02/saga-upgrade-to-ics</id>
    <content type="html"><![CDATA[<p>先前CM9.0发布，没有Desire S版本，失望之余跑去xda上询问<a href="http://forum.xda-developers.com/showthread.php?t=1830505">为什么</a>，得到答案是因为HTC没有发布内核源码，而且CM9.0几乎不会更新，开发者已经转移到Android 4.1也就是CM10上了。之后<a href="http://www.htcdev.com/">HTCDev</a>上源码放出也证实了这点，依然没有Desir S的CM9</p>

<p>xda上rom很多，眼花缭乱，正为选择性障碍发愁时，看到MIUI上有4.0刷机包，教程也很傻瓜，一直久仰大名，从未用过，老鼠虽然爱的是大米，在地主家也没有余粮的年份不妨吃一回小米。</p>

<p>按教程刷机简单总结如下：</p>

<ul>
  <li>升级hboot，利用hboot自动刷的PG88IMG.zip，版本<a href="http://forum.xda-developers.com/showthread.php?t=1679338">7.00.1002</a></li>
  <li>刷官方4.0，依然通过hboot刷PG88IMG.zip，这一步主要是用来刷radio 20.72.30.0833U_3831.17.00.310</li>
  <li>刷recovery，我装的是<a href="http://forum.xda-developers.com/showthread.php?t=1377745">4EXT Recovery Touch</a></li>
  <li>刷小米rom，我习惯用recovery刷</li>
</ul>

<p>上面提到的hboot、官方rom刷机包都在小米提供的工具包里。</p>

<p>本来刷了官方4.0 rom后，想就用sense算了，不想刷小米了，无奈有个硬伤，账户和同步里不能添加谷歌帐号，人人之类倒有一大堆。结果用了一段时间小米，总觉得不满意，一次出差差点没接到电话后，终于下定决心换rom。</p>

<p>首选是曾经用过的virtuous，岂料今非昔比，内核不是原生，从其它机型移植过来的，beta版也算了，最大问题是居然没有中文。</p>

<p>在一阵迷茫后，选中了<a href="http://forum.xda-developers.com/showthread.php?t=1567715">ICE DS</a>。</p>

<ul>
  <li>先刷<code>Full_wip_DS.zip</code>进行清理，再刷rom包</li>
  <li>recovery选中rom包进入刷机过程后，惊讶的发现是一个图形触摸界面，你可以进行一些配置，选择要安装的组件，next，就象Windows上装一个普通软件一样简单直观</li>
  <li>可选组件有Bravia Engine，Stock Battery，Beats Audio，HTC IME with Arrows
    <ul>
      <li>Bravia Engine是图像处理引擎，拍照增强，据说弱光下有更好效果</li>
      <li>Stock Battery貌似是1%进度显示电量百分比</li>
      <li>Beats Audio魔音，是音效增强</li>
      <li>HTC IME with Arrows是HTC输入法带方向键，我猜类似下面这样的，没选。<img src="https://lh5.googleusercontent.com/-w9lp6LOQjeY/UGHFhOd_aJI/AAAAAAAAKSA/33FEP12ZRIs/s288/mfc.jpg" /></li>
    </ul>
  </li>
  <li>此外最大的惊喜是内核带sweep2wake功能，杀手级应用，一下子就让我喜欢上了，之前我一直是用音量键唤醒（rom支持）和搜索键关屏（使用一款叫<a href="https://play.google.com/store/apps/details?id=com.katecca.screenofflock">关屏锁定</a>的APP，又名Screen Off and Lock）</li>
</ul>

<p>喜欢就是全部，不喜欢就是零。由漂亮的安装界面和sweep2wake喜欢上了ICE DS rom，虽然在后面的使用中，也陆续碰到了小米时期的一些问题，使我知道我的那些问题并不是小米的错，但我已是变心的情侣，眼睛里容不下一粒小米。</p>

<ul>
  <li>下拉菜单的快速设置里没有静音选项，一个将就的办法是铃声想起，可以把手机翻个身面朝下</li>
  <li>上面提到小米的“罪证”之一接电话卡，是因为我设置了QQ通讯录的来点显示界面，和rom自带的有冲突，两个会同时显示，解两次锁才能接听，解决是QQ通讯录里设置来电显示为系统默认</li>
  <li><a href="https://play.google.com/store/apps/details?id=com.skvalex.callrecorder">通话录音</a>不能录音的问题。去设置里把录音格式改为amr即可。是app的问题。</li>
</ul>

<p>我想，在CM10正式发布前，我会一直用它了</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[失眠症：好警察坏警察，阿尔帕西诺的独角戏]]></title>
    <link href="http://blog.jackphil.com/blog/2012/10/02/insomnia/"/>
    <updated>2012-10-02T13:52:00+08:00</updated>
    <id>http://blog.jackphil.com/blog/2012/10/02/insomnia</id>
    <content type="html"><![CDATA[<p>白夜追凶，片名愿意为失眠症。</p>

<p>阿尔帕西诺来到阿拉斯加极昼小镇办理少女凶案，追踪嫌犯时误杀搭档，自己也说不清是否心存故意。他们俩正因在一起案件中为给凶手定罪而捏造证据受到调查，搭档准备自首。阿尔帕西诺从此失眠，斯万克对阿尔帕西诺说好警察失眠为破案线索坏警察失眠因为良心煎熬。受罪犯罗宾威廉姆斯（推理小说作家）威逼利诱做了交易，陷害受害者的出轨男友，最后良心发现同归于尽。</p>

<p>全片几乎都是阿尔帕西诺的独角戏，张弛之间，大师风范 </p>

<p><img src="https://lh6.googleusercontent.com/-nEyCz6xMVS8/UGqJxMzLlkI/AAAAAAAAKdY/FEB_0ERG1Ys/s800/p1150166946.jpg" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[藏身之所：世界很小小得容不下你我]]></title>
    <link href="http://blog.jackphil.com/blog/2012/10/02/the-world-is-too-small/"/>
    <updated>2012-10-02T13:39:00+08:00</updated>
    <id>http://blog.jackphil.com/blog/2012/10/02/the-world-is-too-small</id>
    <content type="html"><![CDATA[<p>前CIA特工丹泽尔华盛顿手拿英美情报机构高管贪腐证据，被追杀躲进美领馆，你联想到王老师不是我的错。CIA既兴奋又紧张，立即秘密转移到安全屋酷刑逼供，杀手如蛇附骨摧毁安全屋，被菜鸟看守押解逃亡，体育场趁乱脱身，做假护照时追杀又至，菜鸟也追踪而来两人合力退敌，再迟钝也已经看出最大的BOSS就在CIA。</p>

<p>在最后的安全屋迎来最后的决战，华盛顿死于最后一颗子弹。菜鸟将黑名单公布于众，坏人们灰头土脸受到了惩罚</p>

<p>感情戏可有可无，菜鸟看守雷诺兹展现了优秀的泡妞技巧，戏里戏外美女相伴。如果按主角应该活到最后定律，此片主角应是他</p>

<p>丹泽尔华盛顿成熟老练，演技就是一个眼神，一句台词，或是一咧嘴那一口晃眼的白牙，让我觉得演奥巴马非你莫属，你是当仁不让的主角，你是此片值得一看的第一理由</p>

<p>如果还有第二理由，不装逼的说，那就是追杀与被追杀，忽远忽近，闪展腾挪，临机应变，微微晃动的镜头，轻易加速你的心跳。装逼可以怎么说，我看的多了，和谍影重重比起来真的不算什么……</p>

<p><img src="https://lh6.googleusercontent.com/-HVd4z5dK66g/UGp9-UHuZQI/AAAAAAAAKcs/uOsrUyRHYbE/s800/p1562010884.jpg" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[一道高考数学题]]></title>
    <link href="http://blog.jackphil.com/blog/2012/07/21/an-entrance-examination-problem/"/>
    <updated>2012-07-21T11:00:00+08:00</updated>
    <id>http://blog.jackphil.com/blog/2012/07/21/an-entrance-examination-problem</id>
    <content type="html"><![CDATA[<p>本篇主要用来测试kramdown+mathjax。符号表达参考<a href="http://zh.wikipedia.org/zh/Help:%E6%95%B0%E5%AD%A6%E5%85%AC%E5%BC%8F#.E6.A0.87.E5.87.86.E5.87.BD.E6.95.B0">维基百科</a>，具体用法则参考了<a href="http://kramdown.rubyforge.org/syntax.html#math-blocks">kramdown文档</a></p>

<p>题目来自今年高考全国卷大纲版理科数学： $\Delta ABC$的内角$A,B,C$的对边为$a,b,c$，已知$\cos(A-C)+\cos B=1$，$a=2c$，求$C$</p>

<!--more-->

<p>解答：</p>

<p>$\because$ A、B、C是三角形内角，故有$B=\pi -(A+C)$</p>

<p>$\therefore$</p>

<script type="math/tex; mode=display">% &lt;![CDATA[

\begin{align*}
 & \cos(A-C)+\cos B=\cos(A-C)+\cos[\pi -(A+C)] \\
 & =\cos(A-C)-\cos(A+C)= \\
 & 2\sin A\sin C=1\tag{1}
\end{align*}
 %]]&gt;</script>

<p>$\because a=2c$</p>

<p>$\therefore$ 根据正弦定理，有$\sin A=2\sin C$，代入式(1)，得$\sin^{2} C=\frac{1}{4}$，</p>

<p>$\because 0&lt;C&lt;\pi$，</p>

<p>$\therefore$</p>

<script type="math/tex; mode=display">% &lt;![CDATA[

\begin{align*}
 & \sin C=\frac{1}{2}
\end{align*}
 %]]&gt;</script>

<p>$\because a=2c$，有$a&gt;c$，根据三角形大边对大角的性质，C不可能是钝角</p>

<p>$\therefore$</p>

<script type="math/tex; mode=display">
\begin{align*}
C=\frac{\pi}{6}
\end{align*}
</script>

<p>$Q.E.D$</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[OpenOffice表格横向打印]]></title>
    <link href="http://blog.jackphil.com/blog/2012/07/21/openoffice-calc-print/"/>
    <updated>2012-07-21T10:19:00+08:00</updated>
    <id>http://blog.jackphil.com/blog/2012/07/21/openoffice-calc-print</id>
    <content type="html"><![CDATA[<p>从网上复制了一个以tab排版的表格，智能导入Calc很顺利，打印的时候却遇到了麻烦，A4纸竖着打印会丢失栏目，按MS Office下的老地方去找横向打印设置，未果，最后还是在网上找到了答案，记之备忘：</p>

<p>菜单栏-&gt;格式-&gt;页，选择页标签；纸张格式-&gt;进纸方向，选择横向</p>

<p>由于有多页，你可以在每一页都打印表头：菜单栏-&gt;格式-&gt;打印区域-&gt;编辑，在重复的行处填写行号，比如1，则表的第一行会打印在每页的第一行</p>

<p>为了打印效果更美观，还可以设置表格文字居中，自动换行等等，用过Office的应该很容易找到，不再赘述。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Archlinux更新日志：迁移/lib到/usr/lib]]></title>
    <link href="http://blog.jackphil.com/blog/2012/07/18/archlinux-upgrade/"/>
    <updated>2012-07-18T22:16:00+08:00</updated>
    <id>http://blog.jackphil.com/blog/2012/07/18/archlinux-upgrade</id>
    <content type="html"><![CDATA[<p>这次更新的一个变化是/lib目录和/usr/lib目录合并了，更新后/lib目录将只是一个指向/usr/lib的链接。由于这次变动牵涉到的软件比较多，Archlinux网站上提供了专门的<a href="https://wiki.archlinux.org/index.php/DeveloperWiki:usrlib">升级指导</a></p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class=""><span class="line">sudo pacman -Syu --ignore glibc
</span><span class="line">sudo pacman -Su</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>正如指导中提到的，第二个命令后还是报/lib已经存在的错误，用如下命令查看哪些目录不属于glibc</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class=""><span class="line">find /lib -exec pacman -Qo -- {} +
</span><span class="line">sudo rm -rf /lib/modules</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>我的情况是/lib/modules目录及其子目录下有一些文件，查了一下，没有自己编译的内核模块，所以直接给删了。</p>

<p>升级成功</p>

<!--more-->

<h2 id="section">为什么要合并？</h2>

<p>也许你和我一样，脑子里有十万个为什么：为什么要合并，合并的好处是什么，我的/usr单独分区怎么办，<a href="http://www.pathname.com/fhs/">FHS</a>标准改了么</p>

<p>带着这些问号去找谷歌娘，经过几个来回，谷歌娘终于吐露了实情：</p>

<p>这次改变是Fedora主导的，freedesktop上有一个<a href="http://www.freedesktop.org/wiki/Software/systemd/TheCaseForTheUsrMerge">说明</a>，要点如下：</p>

<p>不止/lib，/bin、/sbin、/lib64都将合并到/usr下对应目录。Archlinux连/lib和/lib64都合并了，它们都指向了/usr/lib，而不是说明中的/usr/lib64</p>

<p>合并后将增加兼容性，给软件维护人员带来福利</p>

<ul>
  <li>不同Linux、Unix系统不同打包者有时候会把同一程序放到不同的目录，现在/bin，或者/usr/bin，都将不是问题。我想路径硬编码的情况更多应该发生在脚本中，为什么不干脆把/sbin和/bin也合并了，完全看不出还保留它们的必要</li>
  <li>Solaris 11已经实现了类似的合并，Linux跟进，与主要的商业Unix系统保持一致。有趣的是Solaris 15年前就开始这么做了，而事实上在SysV Unix上，/bin一直是/usr/bin的链接</li>
</ul>

<p>合并方便系统发行商将系统资源放在统一的/usr目录下，发布一个单独的只读/usr分区，多个客户系统可以通过网络或本地方便的共享，客户系统将主要包含用户的配置文件，可以变得更小。关于这一点，我想说，明显受到Android等智能设备的影响。开源对我来说就是给与你完全掌控自己设备的能力，如果我们要一次次期待尼奥们带给我们越狱或root工具，解放/usr可写权限，我想问这还符合开源精神吗？厂商们会说，但为安全故，来把/usr锁。的确，随着人们越来越离不开手机等移动设备，安全问题也越来越不容忽视。我想将来GPL4有没有可能强制要求使用Linux的厂商必须提供一个安全工具，允许用户解锁他们的手机</p>

<p>有人问对于单独的/usr分区，/usr还没挂载怎么启动系统？单独的/bin、/lib目录可以使我们拥有一个最小化的急救系统，回答是这些现在都交给initrd了</p>

<p>总的来说，个人感觉，这次改变更多是由厂商而不是社区用户推动的，上面这些理由对于我这样的个人用户来说并无多少切身体会，说服力不够，至少我从来没遇到过由于/bin、/usr/bin混乱而找不到可执行程序的情况，我想即使偶尔碰到，去目录下做个链接，甚至直接修改脚本都可以很轻松的搞定。当然，我也没什么好反对的，对我来说无所谓，不过最好先把FHS改一改</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Emacs24的二三事]]></title>
    <link href="http://blog.jackphil.com/blog/2012/06/13/update-to-emacs24/"/>
    <updated>2012-06-13T21:39:00+08:00</updated>
    <id>http://blog.jackphil.com/blog/2012/06/13/update-to-emacs24</id>
    <content type="html"><![CDATA[<p>今天，NBA总决赛第一场，24再次爽约，站在23对面的，是更年轻的35，23似乎要再度饮恨。</p>

<p>Emacs23和Emacs24也不那么和谐，原来的配置，启动直接报错，调教一番是免不了了</p>

<h2 id="color-theme">color theme</h2>

<p>根据<a href="http://batsov.com/articles/2012/02/19/color-theming-in-emacs-reloaded/">Color Theming in Emacs: Reloaded</a>，Emacs24自带了几个颜色主题，我的选择是</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">(load-theme 'tango-dark t)</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>原来的color-theme不兼容24，可以删除之</p>

<h2 id="section">菜单栏和工具栏</h2>

<p>隐藏菜单栏和工具栏，原来给变量赋值nil不再有效，其实nil不再被用来开关minor-mode，有人解释了<a href="http://stackoverflow.com/questions/9423974/emacs-menu-bar-mode-and-tool-bar-mode-automatically-set-to-t">原因</a></p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class=""><span class="line">;;#隐藏菜单和工具栏
</span><span class="line">(tool-bar-mode -1) 
</span><span class="line">(menu-bar-mode -1)</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="section-1">行号</h2>

<p>setnu+是另一个引起麻烦的包，24自带的功能似乎也不错，删除之</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">M-x linum-mode</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="tabbar">tabbar</h2>

<p>标签栏只能显示当前buffer，功能不正常，平时几乎很少用到，也把它删了</p>

<h2 id="elpa-emacs-lisp-package-archive">软件包管理(ELPA: Emacs Lisp Package Archive)</h2>

<p>Emacs24的一大亮点是自带了<a href="Emacs Lisp Package Archive">包管理器</a>(不过并非24独享，22都可以装)，自动安装管理各种lisp功能包</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class=""><span class="line">;;#软件包服务器
</span><span class="line">(setq package-archives '(("gnu" . "http://elpa.gnu.org/packages/")
</span><span class="line">			 ("marmalade" . "http://marmalade-repo.org/packages/")))</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>试用了一下，列出所有软件包：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">M-x package-list-packages</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>C-s搜索，i标记安装，d标记删除，x执行，.emacs.d目录下会生成elpa目录</p>

<p>装了个markdown-mode.el，还是要手动改一下配置，自己在auto-mode-alist注册文件类型。</p>

<p>总的来说很清爽，软件包都在elpa下自己的目录里，也没有自作主张的修改init.el，值得一试</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[高速启动，现在开始systemd]]></title>
    <link href="http://blog.jackphil.com/blog/2012/06/13/systemdnow/"/>
    <updated>2012-06-13T13:15:00+08:00</updated>
    <id>http://blog.jackphil.com/blog/2012/06/13/systemdnow</id>
    <content type="html"><![CDATA[<p>最近一次系统更新，Archlinux用systmed-tools替换了udev。</p>

<p>我年纪渐大，响应胡总号召，不象以前那么爱折腾了。</p>

<p>有人问Lennart创建systemd的动机，回答是“爱折腾”</p>

<p>该折腾还得折腾，与各位Linuxer共勉</p>

<h2 id="systemd-">什么是systemd： 一些八卦</h2>

<p>systemd被设计用来改进sysvinit的缺点，它和ubuntu的upstart是竞争对手，预计会取代它们</p>

<p>systemd的很多概念来源于苹果的launchd</p>

<p>创始人Lennart是redhat员工，但systemd不是redhat项目</p>

<p>systemd的目标是：尽可能启动更少进程；尽可能将更多进程并行启动</p>

<p>systemd尽可能减少对shell脚本的依赖。传统sysvinit使用inittab来决定运行哪些shell脚本，大量使用shell脚本被认为是效率低下无法并行的原因</p>

<p>systemd使用了Linux专属技术，不再顾及POSIX兼容，一度谣传Debian为了它的BSD项目将不会使用systemd</p>

<p>天下武功，唯快不破，加速吧，Linux！</p>

<!--more-->

<h2 id="section">安装</h2>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class=""><span class="line">sudo pacman -Rcsn sysvinit syslog-ng
</span><span class="line">sudo pacman -S systemd systemd-arch-units systemd-sysvcompat</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>删除sysvinit，安装systemd-sysvcompat，我更喜欢这样一个纯的systemd环境。还有一个好处是可以不用设置内核启动参数<code>init=/bin/systemd</code></p>

<p>系统升级的时候只给我用systemd-tools替代了udev，但没装管理工具包systemd，网络也没有，害得我不得不到别的机子上下好，再拷过来安装</p>

<h2 id="section-1">服务管理</h2>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
</pre></td><td class="code"><pre><code class=""><span class="line">systemctl is-enabled &lt;program&gt;.service #查询服务是否开机启动
</span><span class="line">sudo systemctl enable &lt;program&gt;.service #开机运行服务
</span><span class="line">sudo systemctl disable &lt;program&gt;.service #取消开机运行
</span><span class="line">sudo systemctl start &lt;program&gt;.service #启动服务
</span><span class="line">sudo systemctl stop &lt;program&gt;.service #停止服务
</span><span class="line">sudo systemctl restart &lt;program&gt;.service #重启服务
</span><span class="line">sudo systemctl reload &lt;program&gt;.service #重新加载服务配置文件
</span><span class="line">systemctl status &lt;program&gt;.service #查询服务运行状态
</span><span class="line">systemctl --failed #显示启动失败的服务</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>systemctl命令取代了rc.d命令</p>

<h2 id="section-2">开机模块加载</h2>

<p>/etc/modules-load.d/<program>.conf，相当于原rc.conf中的MODULES变量</program></p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="sh"><span class="line"><span class="c"># Load virtio-net.ko at boot</span>
</span><span class="line">virtio-net
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>模块黑名单仍在/etc/modprobe.d/下，如blacklist.conf:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="sh"><span class="line">blacklist badmod.ko
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="locale">Locale</h2>
<p>/etc/locale.conf，相当于原rc.conf中的LOCALE</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="sh"><span class="line"><span class="nv">LANG</span><span class="o">=</span>en_US.UTF-8
</span><span class="line"><span class="nv">LC_COLLATE</span><span class="o">=</span>C
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="section-3">日志服务</h2>
<p>systemd自带日志服务，参考<a href="http://linuxtoy.org/archives/systemd-journal.html">systemd Journal</a></p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="sh"><span class="line">sudo journalctl
</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>可以删除syslog-ng了</p>

<h2 id="section-4">主机名</h2>

<p>/etc/hostname，相当于原来rc.conf中的HOSTNAME变量</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="sh"><span class="line">myhostname
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="section-5">网络</h2>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="sh"><span class="line">sudo systemctl <span class="nb">enable </span>NetworkManager.service
</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>不象rc.conf有专门的配置简单网络的地方，还是用NetworkManager、wicd之类的工具吧</p>

<p>如果你坚持使用简单静态配置，可以参考<a href="https://bbs.archlinux.org/viewtopic.php?pid=1110003">[SOLVED] static ethernet setup under systemd?</a></p>

<h2 id="section-6">运行级别</h2>

<p>systemd用target替代了runlevel的概念，提供了更大的灵活性，如你可以继承一个已有的target，并添加其它服务，来创建自己的target</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
</pre></td><td class="code"><pre><code class="sh"><span class="line">sudo systemctl list-units --type<span class="o">=</span>target <span class="c">#查询当前target</span>
</span><span class="line">sudo systemctl isolate graphical.target <span class="c">#改变当前target，重启无效</span>
</span><span class="line">sudo systemctl <span class="nb">enable </span>multi-user.target <span class="c">#改变启动时默认target</span>
</span><span class="line">sudo systemctl <span class="nb">enable </span>kdm.service <span class="c">#graphical是默认target，指定使用的display manager</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="section-7">优化</h2>

<p>systemd有自己的”e4rat”</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="sh"><span class="line">sudo systemctl <span class="nb">enable </span>systemd-readahead-collect.service
</span><span class="line">sudo systemctl <span class="nb">enable </span>systemd-readahead-replay.service
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>/etc/fstab，修改/home分区options，检查/home分区时并行启动其它服务</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="sh"><span class="line">defaults,noauto,x-systemd.automount
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="section-8">其他</h2>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="sh"><span class="line">sudo systemctl reboot <span class="c">#systemctl还有系统关机、重启、挂起等功能</span>
</span><span class="line">sudo systemctl <span class="nb">suspend</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="section-9">参考资源</h2>

<p><a href="https://wiki.archlinux.org/index.php/Systemd">systemd-Archlinux Wiki</a>: 本文基本上可以说是此文的翻译</p>

<p><a href="http://www.freedesktop.org/software/systemd/man/systemd.service.html">systemd on freedesktop</a>: systemd官方文档，如欲进一步研究，比如service文件中各项含义等，请移步</p>

<p><a href="http://linuxtoy.org/archives/interview-creater-of-systemd-and-pulseaudio-lennart.html">采访 Systemd 和 PulseAudio 创始人 Lennart</a>: Lennart是个有趣的人，文后链接中还能找到许多有用的文章</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Archlinux和VirtualBox]]></title>
    <link href="http://blog.jackphil.com/blog/2012/05/30/archlinux-and-virtualbox/"/>
    <updated>2012-05-30T16:30:00+08:00</updated>
    <id>http://blog.jackphil.com/blog/2012/05/30/archlinux-and-virtualbox</id>
    <content type="html"><![CDATA[<p>Archlinux我所欲也，VirtualBox亦我所欲也，两者可以得兼，AV是也</p>

<p>现在机器性能越来越强，新机器上跑的虚拟机性能不会比5年前的电脑差，如果只是上上网聊聊天，听听音乐看看电影，简直就是浪费。</p>

<p>我经常尝试新系统、新软件，自从有了虚拟机就象是孙悟空得了那金箍棒，腰不酸腿不疼，吃嘛嘛香，花果山我的地盘我做主</p>

<p>再说现在虚拟化和云计算一样，正时髦呢，好比杨幂上戛纳，咱显摆的就是虚拟</p>

<p>维基百科上有张<a href="http://zh.wikipedia.org/wiki/%E7%B3%BB%E7%BB%9F%E8%99%9A%E6%8B%9F%E6%9C%BA%E6%AF%94%E8%BE%83#.E8.99.9B.E6.93.AC.E6.A9.9F.E5.99.A8.E6.AF.94.E8.BC.83">虚拟机软件比较表</a>，我只用过其中的bochs、qemu、virtualbox、vmware。据说内核开发bochs比较好，我还想学学内核，当会专文记录，暂且按下不表。从开源和性能方面考虑，virtualbox实在是居家旅行杀人灭口的必备良药啊</p>

<!--more-->

<h2 id="archlinuxvitualbox">在Archlinux中安装VitualBox</h2>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class=""><span class="line">sudo pacman -S virtualbox
</span><span class="line">sudo gpasswd -a $USER vboxusers</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>virtualbox安装后，系统中多了个vboxusers用户组，只有属于该组的用户能使用虚拟机</p>

<p>/etc/rc.conf</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">MODULES=(…… vboxdrv vboxnetflt)</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>/etc/rc.local</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class=""><span class="line"># Dry-load vbox* modules and trigger a rebuild if modprobe fails
</span><span class="line">modprobe -nqs vbox{drv,pci,net{flt,adp}} &gt;/dev/null 2&gt;&amp;1 || ( /usr/bin/vboxbuild &amp;&amp; . /etc/rc.conf &amp;&amp; modprobe -ab ${MODULES[*]} )</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>内核更新后需要重新编译模块，上面提供的方案先尝试加载模块，如果失败则自动编译</p>

<p><a href="https://wiki.archlinux.org/index.php/VirtualBox#Automatic_re-compilation_of_the_virtualbox_modules_with_every_kernel_update">官方wiki</a>上现在推荐的方法是使用mkinitcpio hook，以便在内核更新时会自动编译，相关hook在aur中</p>

<h2 id="virtualboxarchlinux">在VirtualBox中安装Archlinux</h2>

<p>按通常方法在virtualbox中安装archlinux后，archlinux还只是“可用”，要“好用”就需要一些特别设置和调整</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class=""><span class="line">sudo pacman -S virtualbox-archlinux-additions
</span><span class="line">sudo groupadd vboxsf 
</span><span class="line">sudo gpasswd -a $USER vboxsf</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>要实现开机自动加载共享目录等功能，用户必须是vboxsf组成员，你需要手工创建该用户组</p>

<p>/etc/rc.conf</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class=""><span class="line">MODULES=(... vboxguest vboxsf vboxvideo)
</span><span class="line">……
</span><span class="line">DAEMONS=(... vbox-service ...)</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>vbox-service默认开启了很多实用功能，如与host主机同步时间，开机加载共享目录等，你也可以用VBoxService命令手动控制它们</p>

<p>.xinitrc</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class=""><span class="line">VBoxClient-all &amp;
</span><span class="line">exec ck-launch-session startkde</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>VBoxClient命令提供了剪贴板共享等高级桌面功能，VBoxClient-all用来开启所有这些功能</p>

<p>创建/etc/modprobe.d/blacklist.conf</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">blacklist i2c_piix4</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>虚拟机不含SMBus系统总线，启动时udev会有报错信息，将i2c_piix4模块列入黑名单即可</p>

<h2 id="section">技巧及其它</h2>

<ul>
  <li>共享文件夹在客户机中会被挂载到/media目录下的sf_sharedfolder目录</li>
</ul>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Archlinux快速设置]]></title>
    <link href="http://blog.jackphil.com/blog/2012/05/30/archlinuxkuai-su-she-zhi/"/>
    <updated>2012-05-30T14:45:00+08:00</updated>
    <id>http://blog.jackphil.com/blog/2012/05/30/archlinuxkuai-su-she-zhi</id>
    <content type="html"><![CDATA[<p>按<a href="http://blog.jackphil.com/blog/2012/05/30/archlinuxjian-yi-an-zhuang-zhi-nan/">Archlinux简易安装指南</a>装好系统后，还只是个毛坯房，住不得人，这里介绍的软件和配置，好比装修和家具，在我看来，都是必不可少的，他们带给我“家”的感觉</p>

<!--more-->

<h2 id="section">显卡</h2>
<p>笔记本是ATI显卡，我选择了开源驱动</p>

<p>添加源，在/etc/pacman.conf最后添加</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class=""><span class="line">[radeon]
</span><span class="line">Server = http://spiralinear.org/perry3d/x86_64</span></code></pre></td></tr></table></div></figure></notextile></div>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">pacman -S xf86-video-ati-git #安装驱动</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>建议开机加载驱动，/etc/rc.conf</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">MODULES=(... radeon ...)</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="section-1">桌面</h2>
<p>桌面我选择的是KDE</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">sudo pacman -S kde-meta-kdebase kde-l10n-zh_cn xorg-server xorg-xinit ttf-dejavu</span></code></pre></td></tr></table></div></figure></notextile></div>

<ul>
  <li>我这里选择了最小安装: kde-meta-kdebase</li>
  <li>如果你不使用kdm或gdm这类登录管理器，而使用startx启动桌面，则需要装xorg-xinit</li>
  <li>最小安装kde甚至都不安装英文字体，如果没有合适的字体，kde启动后将停在splash画面，所以你需要安装一个字体，如ttf-dejavu，同样的如果你的locale是中文，但却没有中文字体，你也会进不了桌面，建议安装wqy-bitmapfont、wqy-zenhei</li>
  <li>如果使用startx启动桌面，环境配置文件是.xinitrc</li>
</ul>

<div><script src="https://gist.github.com/2834391.js"></script>
<noscript><pre><code># 不使用LC_ALL，因为它会强制所有LC_*变量使用统一的locale
export LANG=zh_CN.UTF-8

# SCIM
export XMODIFIERS=@im=SCIM
export GTK_IM_MODULE=&quot;scim&quot;
export QT_IM_MODULE=&quot;scim&quot;
scim -d

# 键盘设置
#xmodmap ~/.Xmodmap

# 关闭触摸板
#synclient TouchpadOff=1

# 键盘绑定
#xbindkeys &amp;

#setxkbmap -keycodes evdev -model evdev

exec ck-launch-session startkde</code></pre></noscript></div>

<ul>
  <li>如果使用kdm登录管理器，环境配置文件是.xprofile</li>
</ul>
<div><script src="https://gist.github.com/2834351.js"></script>
<noscript><pre><code># locale setting
export LANG=zh_CN.UTF-8

# input method
export GTK_IM_MODULE=ibus
export XMODIFIERS=@im=ibus
export QT_IM_MODULE=ibus
ibus-daemon -x -d</code></pre></noscript></div>

<ul>
  <li>xorg的配置文件在/etc/X11/xorg.conf.d/目录下，你可以依样创建自己的配置文件，不过现在大部分情况下，xorg都能很好的识别设备（显卡、鼠标键盘等）并加载相应的模块，不需要额外配置</li>
</ul>

<p>/etc/rc.conf</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">DAEMONS=(... dbus ...)</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>KDE使用dbus作为进程间通信机制</p>

<h2 id="kdm">KDM</h2>
<p>kdm在kdebase-workspace包里，即使是最小安装kde，也已经顺带装上了</p>

<p>开机运行，建议修改/etc/inittab，取消注释以下两行</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class=""><span class="line">id:5:initdefault:
</span><span class="line">...
</span><span class="line">x:5:respawn:/usr/bin/kdm -nodaemon</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>可以在登录KDE后，在”系统设置””-“登录屏幕”中进行设置，如你可以在”便利”标签下设置开机自动登录</p>

<h2 id="section-2">触摸板</h2>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class=""><span class="line">sudo pacman -S xf86-input-synaptics # 安装驱动
</span><span class="line">ican toggletouchpad</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>如果你的笔记本没有相应的触摸板开关Fn组合键，可以使用<a href="https://gist.github.com/2836665">ican</a>工具</p>

<h2 id="section-3">输入法</h2>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class=""><span class="line">sudo pacman -S ibus ibus-pinyin ibus-qt
</span><span class="line">ibus-setup # 初始化设置</span></code></pre></td></tr></table></div></figure></notextile></div>

<ul>
  <li>为了能在qt程序中使用输入法，需要安装ibus-qt</li>
  <li>ibus只是输入法框架，你需要在初始化设置中添加拼音输入法</li>
</ul>

<p>配置随桌面启动，在<a href="https://gist.github.com/2834391">.xinitrc</a>或<a href="https://gist.github.com/2834351">.xprofile</a>设置</p>

<h2 id="section-4">终端程序</h2>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">sudo pacman -S yakuake</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>yakuake基于konsole，我习惯设置konsole字体为14号</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Archlinux简易安装指南]]></title>
    <link href="http://blog.jackphil.com/blog/2012/05/30/archlinuxjian-yi-an-zhuang-zhi-nan/"/>
    <updated>2012-05-30T13:57:00+08:00</updated>
    <id>http://blog.jackphil.com/blog/2012/05/30/archlinuxjian-yi-an-zhuang-zhi-nan</id>
    <content type="html"><![CDATA[<p>江湖传说，屌丝装电脑，高富床上搞，最惨的还是装企鹅，只能自己在床上装电脑</p>

<p>据说老毛床上微软，因为他喜欢蓝萍，我们拒绝微软，厌恶蓝屏，各位看官，你准备好了么</p>

<!--more-->

<h2 id="section">准备安装环境</h2>

<p>我喜欢U盘安装，绿色方便，格式化硬盘什么的也没有限制</p>

<p><a href="http://www.pendrivelinux.com/universal-usb-installer-easy-as-1-2-3/">Universal USB Installer</a>可以方便的将iso文件制作为启动U盘。这个方法的一个缺点是你要准备一个干净的U盘，上面原有的文件都会被抹去。</p>

<p>其实我使用的是移动硬盘，大量文档备份转移的话会很麻烦，幸好我装有<a href="http://code.google.com/p/grub4dos-chenall/">grub4dos</a>。archlinux的iso镜像使用syslinux作为启动引导，稍微研究一下它的配置文件syslinux.cfg，可以很容易的转换为grub的配置格式，以archlinux-2011.08.19-core-x86_64.iso为例，下面是我的menu.lst</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class=""><span class="line">title Boot Arch Linux Live CD
</span><span class="line">kernel /arch/boot/x86_64/vmlinuz archisobasedir=arch archisolabel=MYLABEL
</span><span class="line">initrd /arch/boot/x86_64/archiso.img</span></code></pre></td></tr></table></div></figure></notextile></div>

<ul>
  <li>你只需把iso中arch目录拷贝到移动硬盘根目录即可</li>
  <li>MYLABEL是移动硬盘启动分区卷标</li>
  <li>网络环境允许（如无线网卡驱动能自动识别），还是建议选择netinstall镜像</li>
</ul>

<p><a href="http://unetbootin.sourceforge.net/">UNetbootin</a>似乎可以自动化上面的工作，有兴趣可以尝试一下。</p>

<h2 id="section-1">安装界面</h2>

<ul>
  <li>软件源选163的，我这里能满速</li>
  <li>网络设置如果是无线网卡，Ctrl+Alt+Fn切换到别的控制台</li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
</pre></td><td class="code"><pre><code class=""><span class="line">wpa_passphrase mywireless_ssid "secretpassphrase" &gt; /etc/wpa_supplicant.conf
</span><span class="line">ip link set wlan0 up
</span><span class="line">wpa_supplicant -B -Dwext -i wlan0 -c /etc/wpa_supplicant.conf
</span><span class="line">dhcpcd wlan0 # 或者回到安装界面指定静态地址
</span><span class="line">ip addr show wlan0
</span><span class="line">ping www.163.com # 测试一下</span></code></pre></td></tr></table></div></figure></notextile></div>
<ul>
  <li>分区：
    <ul>
      <li>我一般根目录(含boot)20G，其余给home</li>
      <li>我现在6G内存没设swap分区，用了一阵没发现什么问题。一般就内存1-2倍，封顶1G吧（我虚拟机给了1G内存，安装程序自动分配给了256M交换分区）</li>
      <li>分区格式ext4或btrfs</li>
    </ul>
  </li>
  <li>挑选软件时只选一下sudo，我喜欢进入系统后再一点点添加</li>
  <li>修改配置文件：
    <ul>
      <li>rc.conf: 设一下主机名HOSTNAME</li>
      <li>resolv.conf: dns设置，我一般第一个设为8.8.8.8，第二dns为本地电信提供的dns地址</li>
      <li>local.gen，选择zh_CN.utf8，使用编辑器搜索功能加快定位</li>
      <li>设置root密码</li>
    </ul>
  </li>
</ul>

<h2 id="section-2">第一次进入系统</h2>

<ul>
  <li>添加用户：<code>useradd -m -g users -G wheel -s /bin/bash myname</code></li>
  <li>为刚添加的用户设置密码：<code>passwd myname</code></li>
  <li>修改sudo配置：visudo，我一般允许wheel用户组运行任何命令，且无需密码</li>
  <li>退出root，用新用户名登录</li>
</ul>

<p>美女已经入室，接下来就看你怎么调教了</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[安卓手机root刷机教程: 我的HTC Saga Root记录]]></title>
    <link href="http://blog.jackphil.com/blog/2012/05/28/an-zhuo-shou-ji-rootshua-ji-jiao-cheng/"/>
    <updated>2012-05-28T22:35:00+08:00</updated>
    <id>http://blog.jackphil.com/blog/2012/05/28/an-zhuo-shou-ji-rootshua-ji-jiao-cheng</id>
    <content type="html"><![CDATA[<p>整理旧文一篇，部分内容可能已经过时</p>

<!--more-->

<h2 id="hboot">HBOOT</h2>

<p>HBOOT相当于手机的bios</p>

<p>同时按住音量下键和电源键开机，就进入了HBOOT界面，如果有S-ON字样，则需要先解锁，才可以自由的刷机。如果已经是S-OFF，则已经解锁</p>

<p>解锁，简单说就是刷入一个定制的HBOOT，分软解和硬解</p>

<h2 id="section">软解</h2>

<p>软解方法由伟大的<a href="http://alpharev.nl/x/beta">AlpharevX</a>开发</p>

<ul>
  <li>去 http://revolutionary.io/ 下载相应的版本，并填写系统平台(Windows还是Linux)、机型和SN号(可以打开后盖取下电池后看到)等信息，得到一个beta key，记下这个key</li>
  <li>用USB连接电脑，确认系统设置-应用程序-开发-USB调试已经打开</li>
  <li>运行下载的revolutionary程序，按提示输入beta key，等待，机器会自动重启进入HBOOT界面</li>
  <li>revolutionary会询问是否安装recovery，如果选择不安装，也可以在以后用fastboot或RomManager安装</li>
</ul>

<p>另：xda上高手开发了一个新的软解工具，<a href="http://forum.xda-developers.com/showthread.php?t=1343114">HTC Super Tool</a></p>

<h2 id="section-1">硬解</h2>

<p>硬解需要白卡(smartcard，HTC用于工程调试之用，因其白色而得名)或<a href="http://www.xtcclip.com/">xtc clip</a>(第三方开发的专门用来模拟白卡的设备)，不推荐</p>

<ul>
  <li>软解免费，硬解要花上一笔钱</li>
  <li>软解可逆，就是恢复到S-ON状态，有利于保修。而硬解貌似不可逆</li>
  <li>软解后功能更完整，如可以使用fastboot，硬解则不能</li>
</ul>

<h2 id="recovery">Recovery</h2>

<p>recovery相当于电脑的一键ghost，刷recovery的前提是你的HBOOT必须是S-OFF</p>

<h2 id="hboot-eng">HBOOT ENG</h2>

<p>如果你进入HBOOT界面，第一行有AlpharevX字样，就是用AlpharevX软解的，是工程版(eng)HBOOT，可以直接用fastboot刷机</p>

<p>启动到fastboot</p>

<ul>
  <li>拔掉USB连线，关机</li>
  <li>同时按住音量下键和电源键开机，此时进入了HBOOT界面</li>
  <li>选择第一项FASTBOOT，按电源键进入fastboot模式，这时上面显示红底白字的FASTBOOT USB</li>
  <li>通过USB连接到电脑，电脑显示设备安装成功</li>
</ul>

<p>刷入recovery，一般都用<a href="http://www.clockworkmod.com/rommanager">clockworkmod</a></p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">fastboot flash recovery recovery_name.img</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="hboot-1">硬解的HBOOT</h2>

<p>有些水货机卖家已经给你硬解，特征是HBOOT界面S-OFF信息在第一行，这种机用上面的fastboot刷recovery会出现如下错误</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="sh"><span class="line">writing <span class="s1">&#39;recovery&#39;</span> ... FAILED <span class="o">(</span>remote: not allowed<span class="o">)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>建议用AlpharevX再软解一遍。之后就可以用fastboot随便刷recovery了。</p>

<p>也可以下载专门的recovery包PG88IMG.zip，不要改名字，放在sd卡根目录，关机，再启动到HBOOT界面，稍等一会儿，HBOOT会自动搜索更新文件刷新recovery。</p>

<p>注：PG88IMG.zip有中文版，可以到一些安卓论坛上搜索</p>

<h2 id="rom">Rom安装</h2>

<ul>
  <li>拷贝rom包zip文件到sd卡根目录</li>
  <li>同时按住音量下键和电源键开机，进入HBOOT界面</li>
  <li>按音量键选择recovery</li>
  <li>清空数据</li>
  <li>选择rom包，刷机</li>
</ul>

<h2 id="section-2">参考资源</h2>

<p><a href="http://forum.xda-developers.com/showthread.php?p=14693680">To install Clockworkmod after Revolutionary</a>：S-OFF后怎样安装Clockworkmod Recovery，并提供了recovery和工具的下载</p>

<p><a href="http://www.virtuousrom.com/p/unity_23.html">Unity</a>：好用的sense rom</p>

<p><a href="http://www.clockworkmod.com/rommanager">RomManager</a>：RomManager提供的clockworkmod和rom下载</p>

<p><a href="http://download.cyanogenmod.com/?type=stable&amp;device=saga">CyanogenMod</a>：saga的CM rom</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[KDE的语义学桌面: 看上去很美]]></title>
    <link href="http://blog.jackphil.com/blog/2012/05/20/kdede-yu-yi-xue-zhuo-mian/"/>
    <updated>2012-05-20T15:52:00+08:00</updated>
    <id>http://blog.jackphil.com/blog/2012/05/20/kdede-yu-yi-xue-zhuo-mian</id>
    <content type="html"><![CDATA[<p>目前，貌似只有KDE4的家伙们热衷于语义学桌面，并把它强推给了用户。在我看来，这只不过是旧式图书馆技术。这些家伙都是图书馆学毕业的吗？</p>

<!--more-->

<h2 id="section">什么是语义学</h2>

<p>当然，这里谈的是计算机世界的语义学，不是老板对我说要好好工作，他的话语到底有什么含义这样的职场语义学。</p>

<p>语义学大致说来是基于数学基础中的一阶逻辑而来的一套知识表示系统。1998年，互联网发明者蒂姆·伯纳斯·李提出了“语义网”的概念，W3C一直在制定和维护相关的标准。2011年6月，谷歌、雅虎、微软联手推出了schema.org网站，进一步推动语义网的发展</p>

<p>我的理解语义网与以往的图书馆技术没什么两样，就是一套元数据规范。</p>

<ul>
  <li>在数据交换时可能有用，但一般来说只要公开数据接口数据交换就不会有什么问题，不一定非要用什么语义网</li>
  <li>至于知识表示，图书馆也有一套分类法，试图结构化所有人类知识，个人感觉，这些都是互联网史前的观念</li>
</ul>

<h2 id="kde">KDE语义学桌面的几个概念</h2>

<p>Soprano是一套用来存取语义数据（我理解为元数据）库的QT接口</p>

<p>Virtuoso是一个语义数据库，其它类似的还有Redland, Sesame2</p>

<p>Nepomuk是KDE的语义学桌面。它使用Soprano，并有所扩展，如自带了一个谓词表（弄个同义和近义词表不就得了？）</p>

<p>Strigi是Nepomuk的文件索引器，能从文件中自动抽取元数据存储到Virtuoso</p>

<p>Akonadi是KDE的PIM(Personal Information Management: 个人信息管理)数据统一存取框架，它使用MySQL或SQLITE在本地缓存你PIM信息，如gmail邮件、网络通讯录等，同时也会抽取元数据存储到Virtuoso</p>

<h2 id="section-1">关掉它！</h2>

<p>其实写这篇Blog的初衷就是我想扔掉语义学桌面这套东西。扔掉之前，先做一番小小的调查研究，以免娶了小姐丢了丫鬟，辜负了美意。结果还是觉得这是一套强加给用户的范式，包办婚姻害死人啊。</p>

<h3 id="nepomuk">关闭Nepomuk</h3>
<p>Nepomuk是KDE4的核心组件，仍不掉，唯一的办法只能关掉它！</p>

<p>打开 ~/.kde4/share/config/nepomukserverrc，将“Start Nepomuk”设置为false（你也可以在系统设置-桌面搜索中，不启用Nepomuk语义学桌面来关闭）</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class=""><span class="line">[Basic Settings]
</span><span class="line">Start Nepomuk=false</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>打开~/.kde4/share/config/kdedrc，将nepomuksearchmodule的“autoload”设置为false:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class=""><span class="line">[Module-nepomuksearchmodule]
</span><span class="line">autoload=false</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>Strigi依赖Nepomuk，关闭Nepomuk后，Strigi也就自动关闭了</p>

<h3 id="akonadi">关闭Akonadi</h3>
<p>Akonadi作为PIM数据统一存取框架，与Nepomuk相对独立，需要单独关闭</p>

<p>打开~/.config/akonadi/akonadiserverrc，设置“StartServer”为false</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class=""><span class="line">[QMYSQL]
</span><span class="line">StartServer=false</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>事实上根据<a href="http://userbase.kde.org/Akonadi#Disabling_the_Akonadi_subsystem">KDE Userbase</a>的说法，这个设置也只是不自动启动Akonadi server而已，如果某个应用需要akonadi它还会按需启动，相当于Windows服务管理中的”手动”，坏消息是没有提供”禁止”功能</p>

<p>我的测试环境下，Akonadi服务还是会自动启动(没找到是哪个应用触发了它)，所以选用了MySQL后端，但不配置相应的MySQL数据库，甚至大多数情况下，KDE启动的时候MySQL服务都没启动，Akonadi启动失败，自动停止。使用SQLITE后端的话，由于不需要数据库特殊配置，就会成功启动</p>

<p>你可以使用命令行控制Akonadi服务</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
</pre></td><td class="code"><pre><code class=""><span class="line">ubuntuku@satellite:~$ akonadictl --help
</span><span class="line">Akonadi server manipulation tool
</span><span class="line">Usage: akonadictl [command]
</span><span class="line"> 
</span><span class="line">Commands:
</span><span class="line">  start      : Starts the Akonadi server with all its processes
</span><span class="line">  stop       : Stops the Akonadi server and all its processes cleanly
</span><span class="line">  restart    : Restart Akonadi server with all its processes
</span><span class="line">  status     : Shows a status overview of the Akonadi server</span></code></pre></td></tr></table></div></figure></notextile></div>

<h3 id="section-2">一些清理</h3>
<p>清理并不必须，有些甚至还会再次自动生成，只是纯粹出于个人爱好</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class=""><span class="line">rm -rf .kde4/share/apps/nepomuk/
</span><span class="line">rm -f .config/akonadi/agent* # 删除除akonadiserverrc外的所有文件
</span><span class="line">rm -rf .local/share/akonadi/ # akonadi的出错信息在这儿</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="section-3">参考资源</h2>

<p><a href="http://thomasmcguire.wordpress.com/2009/10/03/akonadi-nepomuk-and-strigi-explained">Akonadi, Nepomuk and Strigi explained</a>: 关于Akonadi，Nepomuk和Strigi很好的名词解释</p>

<p><a href="http://ubuntuku.org/16/how-to-disable-nepomuk-akonadi/">How to Disable Nepomuk &amp; Akonadi</a>: 我的关闭语义学桌面的内容主要摘自这里</p>

<p><a href="http://select.yeeyan.org/view/163202/204263">语义网的春天</a>: 介绍了语义网的七层结构，schema.org</p>

<p><a href="http://zh.wikipedia.org/zh/%E8%AF%AD%E4%B9%89%E7%BD%91">语义网</a>: 语义网的维基页</p>

<p><a href="http://wlzy.aynu.edu.cn/jsj/wlkc/rgznyl2/word/text/chapter04/sec4/part3/text.htm">知识表示方法</a>: 语义网比较专业的内容，有一些一阶逻辑表达式</p>

<p><a href="https://wiki.archlinux.org/index.php/KDE#Soprano">Nepomuk和Akonadi</a>: Archlinux Wiki的KDE页面，介绍了Nepomuk和Akonadi的一些配置</p>

<h2 id="section-4">声明</h2>

<p>文中提到的概念和评论都是自己对网络上找到的相关文章的归纳和个人理解，欢迎指正和讨论</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[我爱命令行之sed]]></title>
    <link href="http://blog.jackphil.com/blog/2012/05/17/wo-ai-ming-ling-xing-zhi-sed/"/>
    <updated>2012-05-17T19:22:00+08:00</updated>
    <id>http://blog.jackphil.com/blog/2012/05/17/wo-ai-ming-ling-xing-zhi-sed</id>
    <content type="html"><![CDATA[<h2 id="section">语法</h2>

<p>常用基本格式</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class=""><span class="line"> sed -i -e '指令1' -e '指令2' inputfile
</span><span class="line"> sed -f scriptfile</span></code></pre></td></tr></table></div></figure></notextile></div>

<ul>
  <li>-i: 直接修改文件，而不是输出到标准输出，一般等调试无误后，最后使用该参数</li>
  <li>-e: 后跟指令，可以多次使用</li>
  <li>-f: 从文件中读取指令</li>
</ul>

<!--more-->

<h2 id="section-1">操作指令</h2>

<h3 id="section-2">删除</h3>

<p>一般格式</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class=""><span class="line"> 开始地址,结束地址d
</span><span class="line"> /正则表达式/d</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>第一种删除从开始到结束的行，第二行删除有匹配到字符串的行</p>

<h3 id="section-3">替换</h3>

<p>一般格式</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line"> 开始地址,结束地址s/被替换的文本（正则表达式）/用来替换的文本/标志</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>地址和标志部分可以省略。s(substitute)后的第一个字符被用来作为分割符，所以并非一定要用斜杠，
还可以使用比如冒号（有时候会带来方便，比如匹配网址时，就可以避免和网址中的斜杠冲突）。</p>

<p>用到的标志:</p>

<ul>
  <li>g: 全局替换，而不只是每行的第一个匹配</li>
  <li>n: 替换行中的第n个匹配</li>
</ul>

<h2 id="section-4">应用实例</h2>

<h3 id="section-5">删除指定行</h3>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line"> sed -e '/^#acl/d' inputfile</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>删除#acl开头的行。在MoinMoin升级中，由于用户名改变的原因，页面都变成了只读，只好删除之。</p>

<h3 id="doslinux">DOS文件和Linux文件的转换</h3>

<p>众所周知，Windows上文本文件以CR（回车）和 LF（换行）结束一行，而Linux上只有LF。</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class=""><span class="line"> sed -i -e 's/\r$//' inputfile #dos to linux
</span><span class="line"> sed -e 's/$/\r/' inputfile #linux to dos</span></code></pre></td></tr></table></div></figure></notextile></div>

<h3 id="section-6">正则表达式分组（对匹配字符串的一部分进行操作）</h3>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="sh"><span class="line">sed -e <span class="s1">&#39;s:\(.\)\(}}}\):\1\n\2:&#39;</span> inputfile
</span><span class="line">sed -e <span class="s1">&#39;s:\({{{\)\([^\n]\):\1\n\2:&#39;</span> inputfile
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>这是我升级MoinMoin时用过的，旧版 <code>}</code> 允许与内容在同一行，新版必须单独一行。用圆括号分组（注意带反斜杠），
按出现顺序编号引用（同样注意使用反斜杠）。</p>

<h3 id="sed">sed脚本</h3>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="sh"><span class="line"> <span class="c">#!/bin/sed -f</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="section-7">参考资料</h2>

<p><a href="http://www.ibm.com/developerworks/cn/linux/shell/sed/sed-1/index.html">通用线程 – sed 实例</a> : IBM网站上Daniel Robbins写的教程，正则表达式分组我就是从该教程第三部分学到的。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Octopress技巧集]]></title>
    <link href="http://blog.jackphil.com/blog/2012/05/16/octopress-tips/"/>
    <updated>2012-05-16T21:21:00+08:00</updated>
    <id>http://blog.jackphil.com/blog/2012/05/16/octopress-tips</id>
    <content type="html"><![CDATA[<p>本文收集Octopress使用过程中学到的一些技巧，会经常更新（当然还要看我心情懒不懒得折腾）</p>

<!--more-->

<h2 id="section">首页文章只显示摘要</h2>

<p>在正文中插入标记</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class=""><span class="line">正文开头内容，也是首页摘要显示的部分
</span><span class="line">&lt;!--more--&gt;
</span><span class="line">以下内容不会显示在首页文章列表中</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>编辑_config.yml</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">excerpt_link: "阅读全文" # 用于提示阅读完整文章的文字链接</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="section-1">绑定自家域名</h2>

<p>创建一个CNAME文件</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">echo 'your-domain.com' &gt;&gt; source/CNAME</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>去你自家域名服务提供商修改设置</p>

<ul>
  <li>如果是顶级域名，修改A记录，使之指向207.97.227.245</li>
  <li>如果是二级或以下域名，修改CNAME记录即可，使之指向username.github.com</li>
</ul>

<p>一般deploy后，github这边需要10分钟左右才生效</p>

<p>记得修改_config.yml中url为你绑定的域名，这样搜索框、rss等地址才会正确</p>

<h2 id="section-2">添加统计代码</h2>

<p>我用的是<a href="http://tongji.baidu.com">百度统计</a>，将代码添加到source/_includes/custom/footer.html中即可</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
</pre></td><td class="code"><pre><code class=""><span class="line">&lt;p&gt;
</span><span class="line">  Copyright &copy; 2014 - Jack Phil -
</span><span class="line">  &lt;span class="credit"&gt;Powered by &lt;a href="http://octopress.org"&gt;Octopress&lt;/a&gt;&lt;/span&gt; -
</span><span class="line"> &lt;script type="text/javascript"&gt;
</span><span class="line">var _bdhmProtocol = (("https:" == document.location.protocol) ? " https://" : " http://");
</span><span class="line">document.write(unescape("%3Cscript src='" + _bdhmProtocol + "hm.baidu.com/h.js%3F7b011ba580af2ede1ka05568d5d4828a' type='text/javascript'%3E%3C/script%3E"));
</span><span class="line">&lt;/script&gt;
</span><span class="line">&lt;/p&gt;</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="kramdown">使用kramdown</h2>

<p>kramdown是ruby的一种markdown方言，提供了表格、脚注、LATEX公式等等更多功能</p>

<p>安装</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class=""><span class="line">cd octopress
</span><span class="line">gem install kramdown</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>修改配置文件_config.yml，替换rdiscount为kramdown</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">markdown: kramdown</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="mathjax">数学表达式：mathjax</h2>

<p>kramdown支持使用Latex语法嵌入数学公式，但kramdown本身并<a href="http://kramdown.rubyforge.org/converter/html.html">不包含MathJax库</a>，为了能正确显示公式，还需要添加相关代码到source/_includes/custom/head.html</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
</pre></td><td class="code"><pre><code class=""><span class="line">&lt;!-- mathjax config similar to math.stackexchange --&gt;
</span><span class="line">&lt;script type="text/x-mathjax-config"&gt;
</span><span class="line">MathJax.Hub.Config({
</span><span class="line">  jax: ["input/TeX", "output/HTML-CSS"],
</span><span class="line">  tex2jax: {
</span><span class="line">    inlineMath: [ ['$', '$'] ],
</span><span class="line">    displayMath: [ ['$$', '$$']],
</span><span class="line">    processEscapes: true,
</span><span class="line">    skipTags: ['script', 'noscript', 'style', 'textarea', 'pre', 'code']
</span><span class="line">  },
</span><span class="line">  messageStyle: "none",
</span><span class="line">  "HTML-CSS": { preferredFont: "TeX", availableFonts: ["STIX","TeX"] }
</span><span class="line">});
</span><span class="line">&lt;/script&gt;
</span><span class="line">&lt;script src="http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS_HTML" type="text/javascript"&gt;&lt;/script&gt;</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>修改<code>sass/base/_theme.scss</code>，以解决一个右键点击公式页面瞬间白化的小bug。修改前：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class="css"><span class="line"><span class="nt">body</span> <span class="p">{</span>
</span><span class="line">  <span class="o">&gt;</span> <span class="n">div</span> <span class="err">{</span>
</span><span class="line">    <span class="k">background</span><span class="o">:</span> <span class="err">$</span><span class="n">sidebar</span><span class="o">-</span><span class="n">bg</span> <span class="err">$</span><span class="n">noise</span><span class="o">-</span><span class="n">bg</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>修改后</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class="css"><span class="line"><span class="nt">body</span> <span class="p">{</span>
</span><span class="line">  <span class="o">&gt;</span> <span class="n">div</span><span class="m">#main</span> <span class="err">{</span>
</span><span class="line">    <span class="k">background</span><span class="o">:</span> <span class="err">$</span><span class="n">sidebar</span><span class="o">-</span><span class="n">bg</span> <span class="err">$</span><span class="n">noise</span><span class="o">-</span><span class="n">bg</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="section-3">新建文章后在编辑器中打开</h2>

<p><code>rake new_post</code>后立刻在编辑器中打开进行编辑，就象喝完可乐就要打嗝一样自然。为什么每次都要手动输入命令和一长串路径呢。只需一句命令就可以一劳永逸头屑不再来</p>

<p>在Rakefile中找到new_post任务，在最后添加一句systme调用：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line">  <span class="nb">open</span><span class="p">(</span><span class="n">filename</span><span class="p">,</span> <span class="s1">&#39;w&#39;</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">post</span><span class="o">|</span>
</span><span class="line">    <span class="n">post</span><span class="o">.</span><span class="n">puts</span> <span class="s2">&quot;---&quot;</span>
</span><span class="line">    <span class="n">post</span><span class="o">.</span><span class="n">puts</span> <span class="s2">&quot;layout: post&quot;</span>
</span><span class="line">    <span class="n">post</span><span class="o">.</span><span class="n">puts</span> <span class="s2">&quot;title: </span><span class="se">\&quot;</span><span class="si">#{</span><span class="n">title</span><span class="o">.</span><span class="n">gsub</span><span class="p">(</span><span class="sr">/&amp;/</span><span class="p">,</span><span class="s1">&#39;&amp;amp;&#39;</span><span class="p">)</span><span class="si">}</span><span class="se">\&quot;</span><span class="s2">&quot;</span>
</span><span class="line">    <span class="n">post</span><span class="o">.</span><span class="n">puts</span> <span class="s2">&quot;date: </span><span class="si">#{</span><span class="no">Time</span><span class="o">.</span><span class="n">now</span><span class="o">.</span><span class="n">strftime</span><span class="p">(</span><span class="s1">&#39;%Y-%m-%d %H:%M&#39;</span><span class="p">)</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class="line">    <span class="n">post</span><span class="o">.</span><span class="n">puts</span> <span class="s2">&quot;comments: true&quot;</span>
</span><span class="line">    <span class="n">post</span><span class="o">.</span><span class="n">puts</span> <span class="s2">&quot;categories: &quot;</span>
</span><span class="line">    <span class="n">post</span><span class="o">.</span><span class="n">puts</span> <span class="s2">&quot;---&quot;</span>
</span><span class="line">  <span class="k">end</span>
</span><span class="line">  <span class="nb">system</span><span class="p">(</span><span class="s2">&quot;emacsclient </span><span class="si">#{</span><span class="n">filename</span><span class="si">}</span><span class="s2">&quot;</span><span class="p">)</span>
</span><span class="line"><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
]]></content>
  </entry>
  
</feed>
