<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: 我爱开源 | 眼中无码，心中有码]]></title>
  <link href="http://blog.jackphil.com/blog/categories/我爱开源/atom.xml" rel="self"/>
  <link href="http://blog.jackphil.com/"/>
  <updated>2012-05-30T22:53:34+08:00</updated>
  <id>http://blog.jackphil.com/</id>
  <author>
    <name><![CDATA[Jack Phil]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Archlinux和VirtualBox]]></title>
    <link href="http://blog.jackphil.com/blog/2012/05/30/archlinux-and-virtualbox/"/>
    <updated>2012-05-30T16:30:00+08:00</updated>
    <id>http://blog.jackphil.com/blog/2012/05/30/archlinux-and-virtualbox</id>
    <content type="html"><![CDATA[<p>Archlinux我所欲也，VirtualBox亦我所欲也，两者可以得兼，AV是也</p>

<p>现在机器性能越来越强，新机器上跑的虚拟机性能不会比5年前的电脑差，如果只是上上网聊聊天，听听音乐看看电影，简直就是浪费。</p>

<p>我经常尝试新系统、新软件，自从有了虚拟机就象是孙悟空得了那金箍棒，腰不酸腿不疼，吃嘛嘛香，花果山我的地盘我做主</p>

<p>再说现在虚拟化和云计算一样，正时髦呢，好比杨幂上戛纳，咱显摆的就是虚拟</p>

<p>维基百科上有张<a href="http://zh.wikipedia.org/wiki/%E7%B3%BB%E7%BB%9F%E8%99%9A%E6%8B%9F%E6%9C%BA%E6%AF%94%E8%BE%83#.E8.99.9B.E6.93.AC.E6.A9.9F.E5.99.A8.E6.AF.94.E8.BC.83">虚拟机软件比较表</a>，我只用过其中的bochs、qemu、virtualbox、vmware。据说内核开发bochs比较好，我还想学学内核，当会专文记录，暂且按下不表。从开源和性能方面考虑，virtualbox实在是居家旅行杀人灭口的必备良药啊</p>

<!--more-->


<h2>在Archlinux中安装VitualBox</h2>

<p><code>
sudo pacman -S virtualbox
sudo gpasswd -a $USER vboxusers
</code>
virtualbox安装后，系统中多了个vboxusers用户组，只有属于该组的用户能使用虚拟机</p>

<p>/etc/rc.conf
<code>
MODULES=(…… vboxdrv vboxnetflt)
</code></p>

<p>/etc/rc.local
```</p>

<h1>Dry-load vbox* modules and trigger a rebuild if modprobe fails</h1>

<p>modprobe -nqs vbox{drv,pci,net{flt,adp}} >/dev/null 2>&amp;1 || ( /usr/bin/vboxbuild &amp;&amp; . /etc/rc.conf &amp;&amp; modprobe -ab ${MODULES[*]} )
```
内核更新后需要重新编译模块，上面提供的方案先尝试加载模块，如果失败则自动编译</p>

<p><a href="https://wiki.archlinux.org/index.php/VirtualBox#Automatic_re-compilation_of_the_virtualbox_modules_with_every_kernel_update">官方wiki</a>上现在推荐的方法是使用mkinitcpio hook，以便在内核更新时会自动编译，相关hook在aur中</p>

<h2>在VirtualBox中安装Archlinux</h2>

<p>按通常方法在virtualbox中安装archlinux后，archlinux还只是“可用”，要“好用”就需要一些特别设置和调整</p>

<p><code>
sudo pacman -S virtualbox-archlinux-additions
sudo groupadd vboxsf
sudo gpasswd -a $USER vboxsf
</code>
要实现开机自动加载共享目录等功能，用户必须是vboxsf组成员，你需要手工创建该用户组</p>

<p>/etc/rc.conf
<code>
MODULES=(... vboxguest vboxsf vboxvideo)
……
DAEMONS=(... vbox-service ...)
</code>
vbox-service默认开启了很多实用功能，如与host主机同步时间，开机加载共享目录等，你也可以用VBoxService命令手动控制它们</p>

<p>.xinitrc
<code>
VBoxClient-all &amp;
exec ck-launch-session startkde
</code>
VBoxClient命令提供了剪贴板共享等高级桌面功能，VBoxClient-all用来开启所有这些功能</p>

<p>创建/etc/modprobe.d/blacklist.conf
<code>
blacklist i2c_piix4
</code>
虚拟机不含SMBus系统总线，启动时udev会有报错信息，将i2c_piix4模块列入黑名单即可</p>

<h2>技巧及其它</h2>

<ul>
<li>共享文件夹在客户机中会被挂载到/media目录下的sf_sharedfolder目录</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[archlinux快速设置]]></title>
    <link href="http://blog.jackphil.com/blog/2012/05/30/archlinuxkuai-su-she-zhi/"/>
    <updated>2012-05-30T14:45:00+08:00</updated>
    <id>http://blog.jackphil.com/blog/2012/05/30/archlinuxkuai-su-she-zhi</id>
    <content type="html"><![CDATA[<p>按<a href="http://blog.jackphil.com/blog/2012/05/30/archlinuxjian-yi-an-zhuang-zhi-nan/">Archlinux简易安装指南</a>装好系统后，还只是个毛坯房，住不得人，这里介绍的软件和配置，好比装修和家具，在我看来，都是必不可少的，他们带给我“家”的感觉</p>

<!--more-->


<h2>显卡</h2>

<p>笔记本是ATI显卡，我选择了开源驱动</p>

<p>添加源，在/etc/pacman.conf最后添加
<code>
[radeon]
Server = http://spiralinear.org/perry3d/x86_64
</code></p>

<p><code>
pacman -S xf86-video-ati-git #安装驱动
</code></p>

<p>建议开机加载驱动，/etc/rc.conf
<code>
MODULES=(... radeon ...)
</code></p>

<h2>桌面</h2>

<p>桌面我选择的是KDE
<code>
sudo pacman -S kdebase kde-l10n-zh_cn xorg-server xorg-xinit ttf-dejavu
</code></p>

<ul>
<li>我这里选择了最小安装: kdebase</li>
<li>如果你不使用kdm或gdm这类登录管理器，而使用startx启动桌面，则需要装xorg-xinit</li>
<li>最小安装kde甚至都不安装英文字体，如果没有合适的字体，kde启动后将停在splash画面，所以你需要安装一个字体，如ttf-dejavu，同样的如果你的locale是中文，但却没有中文字体，你也会进不了桌面，建议安装wqy-bitmapfont、wqy-zenhei</li>
<li>如果使用startx启动桌面，环境配置文件是.xinitrc</li>
</ul>


<p><div><script src='https://gist.github.com/2834391.js?file='></script>
<noscript><pre><code># 不使用LC_ALL，因为它会强制所有LC_*变量使用统一的locale
export LANG=zh_CN.UTF-8

# SCIM
export XMODIFIERS=@im=SCIM
export GTK_IM_MODULE=&quot;scim&quot;
export QT_IM_MODULE=&quot;scim&quot;
scim -d

# 键盘设置
#xmodmap ~/.Xmodmap

# 关闭触摸板
#synclient TouchpadOff=1

# 键盘绑定
#xbindkeys &amp;

#setxkbmap -keycodes evdev -model evdev

exec ck-launch-session startkde</code></pre></noscript></div>
</p>

<ul>
<li><p>如果使用kdm登录管理器，环境配置文件是.xprofile
<div><script src='https://gist.github.com/2834351.js?file='></script>
<noscript><pre><code># locale setting
export LANG=zh_CN.UTF-8

# input method
export GTK_IM_MODULE=ibus
export XMODIFIERS=@im=ibus
export QT_IM_MODULE=ibus
ibus-daemon -x -d</code></pre></noscript></div>
</p></li>
<li><p>xorg的配置文件在/etc/X11/xorg.conf.d/目录下，你可以依样创建自己的配置文件，不过现在大部分情况下，xorg都能很好的识别设备（显卡、鼠标键盘等）并加载相应的模块，不需要额外配置</p></li>
</ul>


<p>/etc/rc.conf
<code>
DAEMONS=(... dbus ...)
</code>
KDE使用dbus作为进程间通信机制</p>

<h2>KDM</h2>

<p>kdm在kdebase-workspace包里，即使是最小安装kde，也已经顺带装上了</p>

<p>开机运行，建议修改/etc/inittab，取消注释以下两行
<code>
id:5:initdefault:
...
x:5:respawn:/usr/bin/kdm -nodaemon
</code></p>

<p>可以在登录KDE后，在"系统设置""-"登录屏幕"中进行设置，如你可以在"便利"标签下设置开机自动登录</p>

<h2>触摸板</h2>

<p><code>
sudo pacman -S xf86-input-synaptics # 安装驱动
ican toggletouchpad
</code>
如果你的笔记本没有相应的触摸板开关Fn组合键，可以使用<a href="https://gist.github.com/2836665">ican</a>工具</p>

<h2>输入法</h2>

<p><code>
sudo pacman -S ibus ibus-pinyin ibus-qt
ibus-setup # 初始化设置
</code></p>

<ul>
<li>为了能在qt程序中使用输入法，需要安装ibus-qt</li>
<li>ibus只是输入法框架，你需要在初始化设置中添加拼音输入法</li>
</ul>


<p>配置随桌面启动，在<a href="https://gist.github.com/2834391">.xinitrc</a>或<a href="https://gist.github.com/2834351">.xprofile</a>设置</p>

<h2>终端程序</h2>

<p><code>
sudo pacman -S yakuake
</code></p>

<p>yakuake基于konsole，我习惯设置konsole字体为14号</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Archlinux简易安装指南]]></title>
    <link href="http://blog.jackphil.com/blog/2012/05/30/archlinuxjian-yi-an-zhuang-zhi-nan/"/>
    <updated>2012-05-30T13:57:00+08:00</updated>
    <id>http://blog.jackphil.com/blog/2012/05/30/archlinuxjian-yi-an-zhuang-zhi-nan</id>
    <content type="html"><![CDATA[<p>江湖传说，屌丝装电脑，高富床上搞，最惨的还是装企鹅，只能自己在床上装电脑</p>

<p>据说老毛床上微软，因为他喜欢蓝萍，我们拒绝微软，厌恶蓝屏，各位看官，你准备好了么</p>

<!--more-->


<h2>准备安装环境</h2>

<p>我喜欢U盘安装，绿色方便，格式化硬盘什么的也没有限制</p>

<p><a href="http://www.pendrivelinux.com/universal-usb-installer-easy-as-1-2-3/">Universal USB Installer</a>可以方便的将iso文件制作为启动U盘。这个方法的一个缺点是你要准备一个干净的U盘，上面原有的文件都会被抹去。</p>

<p>其实我使用的是移动硬盘，大量文档备份转移的话会很麻烦，幸好我装有<a href="http://code.google.com/p/grub4dos-chenall/">grub4dos</a>。archlinux的iso镜像使用syslinux作为启动引导，稍微研究一下它的配置文件syslinux.cfg，可以很容易的转换为grub的配置格式，以archlinux-2011.08.19-core-x86_64.iso为例，下面是我的menu.lst
<code>
title Boot Arch Linux Live CD
kernel /arch/boot/x86_64/vmlinuz archisobasedir=arch archisolabel=MYLABEL
initrd /arch/boot/x86_64/archiso.img
</code></p>

<ul>
<li>你只需把iso中arch目录拷贝到移动硬盘根目录即可</li>
<li>MYLABEL是移动硬盘启动分区卷标</li>
<li>网络环境允许（如无线网卡驱动能自动识别），还是建议选择netinstall镜像</li>
</ul>


<h2>安装界面</h2>

<ul>
<li>软件源选163的，我这里能满速</li>
<li>网络设置如果是无线网卡，Ctrl+Alt+Fn切换到别的控制台
<code>
wpa_passphrase mywireless_ssid "secretpassphrase" &gt; /etc/wpa_supplicant.conf
ip link set wlan0 up
wpa_supplicant -B -Dwext -i wlan0 -c /etc/wpa_supplicant.conf
dhcpcd wlan0 # 或者回到安装界面指定静态地址
ip addr show wlan0
ping www.163.com # 测试一下
</code></li>
<li>分区：

<ul>
<li>我一般根目录(含boot)20G，其余给home</li>
<li>我现在6G内存没设swap分区，用了一阵没发现什么问题。一般就内存1-2倍，封顶1G吧（我虚拟机给了1G内存，安装程序自动分配给了256M交换分区）</li>
<li>分区格式ext4或btrfs</li>
</ul>
</li>
<li>挑选软件时只选一下sudo，我喜欢进入系统后再一点点添加</li>
<li>修改配置文件：

<ul>
<li>rc.conf: 设一下主机名HOSTNAME</li>
<li>resolv.conf: dns设置，我一般第一个设为8.8.8.8，第二dns为本地电信提供的dns地址</li>
<li>local.gen，选择zh_CN.utf8，使用编辑器搜索功能加快定位</li>
<li>设置root密码</li>
</ul>
</li>
</ul>


<h2>第一次进入系统</h2>

<ul>
<li>添加用户：<code>useradd -m -g users -G wheel -s /bin/bash myname</code></li>
<li>为刚添加的用户设置密码：<code>passwd myname</code></li>
<li>修改sudo配置：visudo，我一般允许wheel用户组运行任何命令，且无需密码</li>
<li>退出root，用新用户名登录</li>
</ul>


<p>美女已经入室，接下来就看你怎么调教了</p>
]]></content>
  </entry>
  
</feed>
