<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: 我爱开源 | 眼中无码，心中有码]]></title>
  <link href="http://blog.jackphil.com/blog/categories/我爱开源/atom.xml" rel="self"/>
  <link href="http://blog.jackphil.com/"/>
  <updated>2012-07-21T16:12:03+08:00</updated>
  <id>http://blog.jackphil.com/</id>
  <author>
    <name><![CDATA[Jack Phil]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[OpenOffice表格横向打印]]></title>
    <link href="http://blog.jackphil.com/blog/2012/07/21/openoffice-calc-print/"/>
    <updated>2012-07-21T10:19:00+08:00</updated>
    <id>http://blog.jackphil.com/blog/2012/07/21/openoffice-calc-print</id>
    <content type="html"><![CDATA[<p>从网上复制了一个以tab排版的表格，智能导入Calc很顺利，打印的时候却遇到了麻烦，A4纸竖着打印会丢失栏目，按MS Office下的老地方去找横向打印设置，未果，最后还是在网上找到了答案，记之备忘：</p>

<p>菜单栏-&gt;格式-&gt;页，选择页标签；纸张格式-&gt;进纸方向，选择横向</p>

<p>由于有多页，你可以在每一页都打印表头：菜单栏-&gt;格式-&gt;打印区域-&gt;编辑，在重复的行处填写行号，比如1，则表的第一行会打印在每页的第一行</p>

<p>为了打印效果更美观，还可以设置表格文字居中，自动换行等等，用过Office的应该很容易找到，不再赘述。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[archlinux更新日志：迁移/lib到/usr/lib]]></title>
    <link href="http://blog.jackphil.com/blog/2012/07/18/archlinux-upgrade/"/>
    <updated>2012-07-18T22:16:00+08:00</updated>
    <id>http://blog.jackphil.com/blog/2012/07/18/archlinux-upgrade</id>
    <content type="html"><![CDATA[<p>这次更新的一个变化是/lib目录和/usr/lib目录合并了，更新后/lib目录将只是一个指向/usr/lib的链接。由于这次变动牵涉到的软件比较多，Archlinux网站上提供了专门的<a href="https://wiki.archlinux.org/index.php/DeveloperWiki:usrlib">升级指导</a></p>

<p><code>
sudo pacman -Syu --ignore glibc
sudo pacman -Su
</code></p>

<p>正如指导中提到的，第二个命令后还是报/lib已经存在的错误，用如下命令查看哪些目录不属于glibc</p>

<p><code>
find /lib -exec pacman -Qo -- {} +
sudo rm -rf /lib/modules
</code></p>

<p>我的情况是/lib/modules目录及其子目录下有一些文件，查了一下，没有自己编译的内核模块，所以直接给删了。</p>

<p>升级成功</p>

<h2 id="section">为什么要合并？</h2>

<p>也许你和我一样，脑子里有十万个为什么：为什么要合并，合并的好处是什么，我的/usr单独分区怎么办，<a href="http://www.pathname.com/fhs/">FHS</a>标准改了么</p>

<p>带着这些问号去找谷歌娘，经过几个来回，谷歌娘终于吐露了实情：</p>

<p>这次改变是Fedora主导的，freedesktop上有一个<a href="http://www.freedesktop.org/wiki/Software/systemd/TheCaseForTheUsrMerge">说明</a>，要点如下：</p>

<p>不止/lib，/bin、/sbin、/lib64都将合并到/usr下对应目录。Archlinux连/lib和/lib64都合并了，它们都指向了/usr/lib，而不是说明中的/usr/lib64</p>

<p>合并后将增加兼容性，给软件维护人员带来福利</p>

<ul>
  <li>不同Linux、Unix系统不同打包者有时候会把同一程序放到不同的目录，现在/bin，或者/usr/bin，都将不是问题。我想路径硬编码的情况更多应该发生在脚本中，为什么不干脆把/sbin和/bin也合并了，完全看不出还保留它们的必要</li>
  <li>Solaris 11已经实现了类似的合并，Linux跟进，与主要的商业Unix系统保持一致。有趣的是Solaris 15年前就开始这么做了，而事实上在SysV Unix上，/bin一直是/usr/bin的链接</li>
</ul>

<p>合并方便系统发行商将系统资源放在统一的/usr目录下，发布一个单独的只读/usr分区，多个客户系统可以通过网络或本地方便的共享，客户系统将主要包含用户的配置文件，可以变得更小。关于这一点，我想说，明显受到Android等智能设备的影响。开源对我来说就是给与你完全掌控自己设备的能力，如果我们要一次次期待尼奥们带给我们越狱或root工具，解放/usr可写权限，我想问这还符合开源精神吗？厂商们会说，但为安全故，来把/usr锁。的确，随着人们越来越离不开手机等移动设备，安全问题也越来越不容忽视。我想将来GPL4有没有可能强制要求使用Linux的厂商必须提供一个安全工具，允许用户解锁他们的手机</p>

<p>有人问对于单独的/usr分区，/usr还没挂载怎么启动系统？单独的/bin、/lib目录可以使我们拥有一个最小化的急救系统，回答是这些现在都交给initrd了</p>

<p>总的来说，个人感觉，这次改变更多是由厂商而不是社区用户推动的，上面这些理由对于我这样的个人用户来说并无多少切身体会，说服力不够，至少我从来没遇到过由于/bin、/usr/bin混乱而找不到可执行程序的情况，我想即使偶尔碰到，去目录下做个链接，甚至直接修改脚本都可以很轻松的搞定。当然，我也没什么好反对的，对我来说无所谓，不过最好先把FHS改一改</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[高速启动，现在开始systemd]]></title>
    <link href="http://blog.jackphil.com/blog/2012/06/13/systemdnow/"/>
    <updated>2012-06-13T13:15:00+08:00</updated>
    <id>http://blog.jackphil.com/blog/2012/06/13/systemdnow</id>
    <content type="html"><![CDATA[<p>最近一次系统更新，Archlinux用systmed-tools替换了udev。</p>

<p>我年纪渐大，响应胡总号召，不象以前那么爱折腾了。</p>

<p>有人问Lennart创建systemd的动机，回答是“爱折腾”</p>

<p>该折腾还得折腾，与各位Linuxer共勉</p>

<h2 id="systemd-">什么是systemd： 一些八卦</h2>

<p>systemd被设计用来改进sysvinit的缺点，它和ubuntu的upstart是竞争对手，预计会取代它们</p>

<p>systemd的很多概念来源于苹果的launchd</p>

<p>创始人Lennart是redhat员工，但systemd不是redhat项目</p>

<p>systemd的目标是：尽可能启动更少进程；尽可能将更多进程并行启动</p>

<p>systemd尽可能减少对shell脚本的依赖。传统sysvinit使用inittab来决定运行哪些shell脚本，大量使用shell脚本被认为是效率低下无法并行的原因</p>

<p>systemd使用了Linux专属技术，不再顾及POSIX兼容，一度谣传Debian为了它的BSD项目将不会使用systemd</p>

<p>天下武功，唯快不破，加速吧，Linux！</p>

<!--more-->

<h2 id="section">安装</h2>

<p><code>
sudo pacman -Rcsn sysvinit syslog-ng
sudo pacman -S systemd systemd-arch-units systemd-sysvcompat
</code></p>

<p>删除sysvinit，安装systemd-sysvcompat，我更喜欢这样一个纯的systemd环境。还有一个好处是可以不用设置内核启动参数<code>init=/bin/systemd</code></p>

<p>系统升级的时候只给我用systemd-tools替代了udev，但没装管理工具包systemd，网络也没有，害得我不得不到别的机子上下好，再拷过来安装</p>

<h2 id="section-1">服务管理</h2>

<p><code>
systemctl is-enabled &lt;program&gt;.service #查询服务是否开机启动
sudo systemctl enable &lt;program&gt;.service #开机运行服务
sudo systemctl disable &lt;program&gt;.service #取消开机运行
sudo systemctl start &lt;program&gt;.service #启动服务
sudo systemctl stop &lt;program&gt;.service #停止服务
sudo systemctl restart &lt;program&gt;.service #重启服务
sudo systemctl reload &lt;program&gt;.service #重新加载服务配置文件
systemctl status &lt;program&gt;.service #查询服务运行状态
systemctl --failed #显示启动失败的服务
</code>
systemctl命令取代了rc.d命令</p>

<h2 id="section-2">开机模块加载</h2>

<p>/etc/modules-load.d/<program>.conf，相当于原rc.conf中的MODULES变量</program></p>

<p><code>sh
# Load virtio-net.ko at boot
virtio-net
</code></p>

<p>模块黑名单仍在/etc/modprobe.d/下，如blacklist.conf:</p>

<p><code>
blacklist badmod.ko
</code></p>

<h2 id="locale">Locale</h2>
<p>/etc/locale.conf，相当于原rc.conf中的LOCALE</p>

<p><code>
LANG=en_US.UTF-8
LC_COLLATE=C
</code></p>

<h2 id="section-3">日志服务</h2>
<p>systemd自带日志服务，参考<a href="http://linuxtoy.org/archives/systemd-journal.html">systemd Journal</a></p>

<p><code>
sudo journalctl
</code>
可以删除syslog-ng了</p>

<h2 id="section-4">主机名</h2>

<p>/etc/hostname，相当于原来rc.conf中的HOSTNAME变量</p>

<p><code>
myhostname
</code></p>

<h2 id="section-5">网络</h2>

<p><code>
sudo systemctl enable NetworkManager.service
</code>
不象rc.conf有专门的配置简单网络的地方，还是用NetworkManager、wicd之类的工具吧</p>

<p>如果你坚持使用简单静态配置，可以参考<a href="https://bbs.archlinux.org/viewtopic.php?pid=1110003">[SOLVED] static ethernet setup under systemd?</a></p>

<h2 id="section-6">运行级别</h2>

<p>systemd用target替代了runlevel的概念，提供了更大的灵活性，如你可以继承一个已有的target，并添加其它服务，来创建自己的target</p>

<p><code>
sudo systemctl list-units --type=target #查询当前target
sudo systemctl isolate graphical.target #改变当前target，重启无效
sudo systemctl enable multi-user.target #改变启动时默认target
sudo systemctl enable kdm.service #graphical是默认target，指定使用的display manager
</code></p>

<h2 id="section-7">优化</h2>

<p>systemd有自己的”e4rat”</p>

<p><code>
sudo systemctl enable systemd-readahead-collect.service
sudo systemctl enable systemd-readahead-replay.service
</code></p>

<p>/etc/fstab，修改/home分区options，检查/home分区时并行启动其它服务</p>

<p><code>
defaults,noauto,x-systemd.automount
</code></p>

<h2 id="section-8">其他</h2>

<p><code>
sudo systemctl reboot #systemctl还有系统关机、重启、挂起等功能
sudo systemctl suspend
</code></p>

<h2 id="section-9">参考资源</h2>

<p><a href="https://wiki.archlinux.org/index.php/Systemd">systemd-Archlinux Wiki</a>: 本文基本上可以说是此文的翻译</p>

<p><a href="http://www.freedesktop.org/software/systemd/man/systemd.service.html">systemd on freedesktop</a>: systemd官方文档，如欲进一步研究，比如service文件中各项含义等，请移步</p>

<p><a href="http://linuxtoy.org/archives/interview-creater-of-systemd-and-pulseaudio-lennart.html">采访 Systemd 和 PulseAudio 创始人 Lennart</a>: Lennart是可有趣的人，文后链接中还能找到许多有用的文章</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Archlinux和VirtualBox]]></title>
    <link href="http://blog.jackphil.com/blog/2012/05/30/archlinux-and-virtualbox/"/>
    <updated>2012-05-30T16:30:00+08:00</updated>
    <id>http://blog.jackphil.com/blog/2012/05/30/archlinux-and-virtualbox</id>
    <content type="html"><![CDATA[<p>Archlinux我所欲也，VirtualBox亦我所欲也，两者可以得兼，AV是也</p>

<p>现在机器性能越来越强，新机器上跑的虚拟机性能不会比5年前的电脑差，如果只是上上网聊聊天，听听音乐看看电影，简直就是浪费。</p>

<p>我经常尝试新系统、新软件，自从有了虚拟机就象是孙悟空得了那金箍棒，腰不酸腿不疼，吃嘛嘛香，花果山我的地盘我做主</p>

<p>再说现在虚拟化和云计算一样，正时髦呢，好比杨幂上戛纳，咱显摆的就是虚拟</p>

<p>维基百科上有张<a href="http://zh.wikipedia.org/wiki/%E7%B3%BB%E7%BB%9F%E8%99%9A%E6%8B%9F%E6%9C%BA%E6%AF%94%E8%BE%83#.E8.99.9B.E6.93.AC.E6.A9.9F.E5.99.A8.E6.AF.94.E8.BC.83">虚拟机软件比较表</a>，我只用过其中的bochs、qemu、virtualbox、vmware。据说内核开发bochs比较好，我还想学学内核，当会专文记录，暂且按下不表。从开源和性能方面考虑，virtualbox实在是居家旅行杀人灭口的必备良药啊</p>

<!--more-->

<h2 id="archlinuxvitualbox">在Archlinux中安装VitualBox</h2>

<p><code>
sudo pacman -S virtualbox
sudo gpasswd -a $USER vboxusers
</code>
virtualbox安装后，系统中多了个vboxusers用户组，只有属于该组的用户能使用虚拟机</p>

<p>/etc/rc.conf</p>

<p><code>
MODULES=(…… vboxdrv vboxnetflt)
</code></p>

<p>/etc/rc.local</p>

<p><code>
# Dry-load vbox* modules and trigger a rebuild if modprobe fails
modprobe -nqs vbox{drv,pci,net{flt,adp}} &gt;/dev/null 2&gt;&amp;1 || ( /usr/bin/vboxbuild &amp;&amp; . /etc/rc.conf &amp;&amp; modprobe -ab ${MODULES[*]} )
</code>
内核更新后需要重新编译模块，上面提供的方案先尝试加载模块，如果失败则自动编译</p>

<p><a href="https://wiki.archlinux.org/index.php/VirtualBox#Automatic_re-compilation_of_the_virtualbox_modules_with_every_kernel_update">官方wiki</a>上现在推荐的方法是使用mkinitcpio hook，以便在内核更新时会自动编译，相关hook在aur中</p>

<h2 id="virtualboxarchlinux">在VirtualBox中安装Archlinux</h2>

<p>按通常方法在virtualbox中安装archlinux后，archlinux还只是“可用”，要“好用”就需要一些特别设置和调整</p>

<p><code>
sudo pacman -S virtualbox-archlinux-additions
sudo groupadd vboxsf 
sudo gpasswd -a $USER vboxsf
</code>
要实现开机自动加载共享目录等功能，用户必须是vboxsf组成员，你需要手工创建该用户组</p>

<p>/etc/rc.conf</p>

<p><code>
MODULES=(... vboxguest vboxsf vboxvideo)
……
DAEMONS=(... vbox-service ...)
</code>
vbox-service默认开启了很多实用功能，如与host主机同步时间，开机加载共享目录等，你也可以用VBoxService命令手动控制它们</p>

<p>.xinitrc</p>

<p><code>
VBoxClient-all &amp;
exec ck-launch-session startkde
</code>
VBoxClient命令提供了剪贴板共享等高级桌面功能，VBoxClient-all用来开启所有这些功能</p>

<p>创建/etc/modprobe.d/blacklist.conf</p>

<p><code>
blacklist i2c_piix4
</code>
虚拟机不含SMBus系统总线，启动时udev会有报错信息，将i2c_piix4模块列入黑名单即可</p>

<h2 id="section">技巧及其它</h2>

<ul>
  <li>共享文件夹在客户机中会被挂载到/media目录下的sf_sharedfolder目录</li>
</ul>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[archlinux快速设置]]></title>
    <link href="http://blog.jackphil.com/blog/2012/05/30/archlinuxkuai-su-she-zhi/"/>
    <updated>2012-05-30T14:45:00+08:00</updated>
    <id>http://blog.jackphil.com/blog/2012/05/30/archlinuxkuai-su-she-zhi</id>
    <content type="html"><![CDATA[<p>按<a href="http://blog.jackphil.com/blog/2012/05/30/archlinuxjian-yi-an-zhuang-zhi-nan/">Archlinux简易安装指南</a>装好系统后，还只是个毛坯房，住不得人，这里介绍的软件和配置，好比装修和家具，在我看来，都是必不可少的，他们带给我“家”的感觉</p>

<!--more-->

<h2 id="section">显卡</h2>
<p>笔记本是ATI显卡，我选择了开源驱动</p>

<p>添加源，在/etc/pacman.conf最后添加</p>

<p><code>
[radeon]
Server = http://spiralinear.org/perry3d/x86_64
</code></p>

<p><code>
pacman -S xf86-video-ati-git #安装驱动
</code></p>

<p>建议开机加载驱动，/etc/rc.conf</p>

<p><code>
MODULES=(... radeon ...)
</code></p>

<h2 id="section-1">桌面</h2>
<p>桌面我选择的是KDE</p>

<p><code>
sudo pacman -S kdebase kde-l10n-zh_cn xorg-server xorg-xinit ttf-dejavu
</code></p>

<ul>
  <li>我这里选择了最小安装: kdebase</li>
  <li>如果你不使用kdm或gdm这类登录管理器，而使用startx启动桌面，则需要装xorg-xinit</li>
  <li>最小安装kde甚至都不安装英文字体，如果没有合适的字体，kde启动后将停在splash画面，所以你需要安装一个字体，如ttf-dejavu，同样的如果你的locale是中文，但却没有中文字体，你也会进不了桌面，建议安装wqy-bitmapfont、wqy-zenhei</li>
  <li>如果使用startx启动桌面，环境配置文件是.xinitrc</li>
</ul>

<p><div><script src='https://gist.github.com/2834391.js?file='></script>
<noscript><pre><code># 不使用LC_ALL，因为它会强制所有LC_*变量使用统一的locale
export LANG=zh_CN.UTF-8

# SCIM
export XMODIFIERS=@im=SCIM
export GTK_IM_MODULE=&quot;scim&quot;
export QT_IM_MODULE=&quot;scim&quot;
scim -d

# 键盘设置
#xmodmap ~/.Xmodmap

# 关闭触摸板
#synclient TouchpadOff=1

# 键盘绑定
#xbindkeys &amp;

#setxkbmap -keycodes evdev -model evdev

exec ck-launch-session startkde</code></pre></noscript></div>
</p>

<ul>
  <li>
    <p>如果使用kdm登录管理器，环境配置文件是.xprofile
<div><script src='https://gist.github.com/2834351.js?file='></script>
<noscript><pre><code># locale setting
export LANG=zh_CN.UTF-8

# input method
export GTK_IM_MODULE=ibus
export XMODIFIERS=@im=ibus
export QT_IM_MODULE=ibus
ibus-daemon -x -d</code></pre></noscript></div>
</p>
  </li>
  <li>
    <p>xorg的配置文件在/etc/X11/xorg.conf.d/目录下，你可以依样创建自己的配置文件，不过现在大部分情况下，xorg都能很好的识别设备（显卡、鼠标键盘等）并加载相应的模块，不需要额外配置</p>
  </li>
</ul>

<p>/etc/rc.conf</p>

<p><code>
DAEMONS=(... dbus ...)
</code>
KDE使用dbus作为进程间通信机制</p>

<h2 id="kdm">KDM</h2>
<p>kdm在kdebase-workspace包里，即使是最小安装kde，也已经顺带装上了</p>

<p>开机运行，建议修改/etc/inittab，取消注释以下两行</p>

<p><code>
id:5:initdefault:
...
x:5:respawn:/usr/bin/kdm -nodaemon
</code></p>

<p>可以在登录KDE后，在”系统设置””-“登录屏幕”中进行设置，如你可以在”便利”标签下设置开机自动登录</p>

<h2 id="section-2">触摸板</h2>

<p><code>
sudo pacman -S xf86-input-synaptics # 安装驱动
ican toggletouchpad
</code>
如果你的笔记本没有相应的触摸板开关Fn组合键，可以使用<a href="https://gist.github.com/2836665">ican</a>工具</p>

<h2 id="section-3">输入法</h2>

<p><code>
sudo pacman -S ibus ibus-pinyin ibus-qt
ibus-setup # 初始化设置
</code></p>

<ul>
  <li>为了能在qt程序中使用输入法，需要安装ibus-qt</li>
  <li>ibus只是输入法框架，你需要在初始化设置中添加拼音输入法</li>
</ul>

<p>配置随桌面启动，在<a href="https://gist.github.com/2834391">.xinitrc</a>或<a href="https://gist.github.com/2834351">.xprofile</a>设置</p>

<h2 id="section-4">终端程序</h2>

<p><code>
sudo pacman -S yakuake
</code></p>

<p>yakuake基于konsole，我习惯设置konsole字体为14号</p>
]]></content>
  </entry>
  
</feed>
